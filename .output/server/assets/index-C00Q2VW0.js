import { jsxs, jsx, Fragment } from "react/jsx-runtime";
import { a as getNextHearingDateAPI, b as getDueDateAPI, c as getOrganizationAnalytics, d as getCasesCountAPI, e as getLocationStatsCountAPI, f as getServicesCountApi, h as getAdvocateServicesCountAPI, g as getOrgServiceCasesCount, i as getOrganizationsCountAPI, j as getAdvocatesCountAPI, k as getManagersCountAPI } from "./dashboard-uQmz2qHd.js";
import { useQuery, useInfiniteQuery } from "@tanstack/react-query";
import dayjs from "dayjs";
import tz from "dayjs/plugin/timezone.js";
import utc from "dayjs/plugin/utc.js";
import React__default, { useState, useRef, useMemo, useEffect } from "react";
import { A as Avatar, a as AvatarImage, b as AvatarFallback } from "./avatar-xL-W5RbG.js";
import { Loader2, User, MapPin } from "lucide-react";
import { c as CustomDateRangePicker, u as useOrganizationsStats, a as useLocations, b as useOrganizationDropdown, d as useAdvocateOrgDropdown, e as useAdvocateLocationDropdown, I as INRFormatter, C as ComboBox, g as getIcon } from "./dashboard_queries-Cldy_CAd.js";
import { T as TooltipProvider, a as Tooltip, b as TooltipTrigger, c as TooltipContent } from "./tooltip-BKF0DBvK.js";
import { useNavigate } from "@tanstack/react-router";
import { M as ManagerIcon, A as AdvocateIcon } from "./ManagerIcon-_z3rIyGq.js";
import { E as EngineerValuationIcon } from "./engineer-property-valuation-icon-DvwJZRaE.js";
import { L as Litigation } from "./litigation-icon-CGSJaxzX.js";
import { u as userStore } from "./userDetails-Dbr9T6uw.js";
import { u as useUserDetails } from "./useUserPermissions-IrViIWLA.js";
import { useStore } from "@tanstack/react-store";
import { O as OverflowContentTooltip } from "./OverflowContentTooltip-CDqdkYzJ.js";
import { L as LoadingComponent } from "./Loading-DQypZbMn.js";
import { N as NoDataDisplay } from "./NoDataBlock-OQRQAvdc.js";
import { useReactTable, getCoreRowModel, flexRender } from "@tanstack/react-table";
import { T as TanStackTable } from "./TanstackTable-CsC49-gk.js";
import { S as Select, a as SelectTrigger, b as SelectValue, c as SelectContent, d as SelectItem } from "./select-DGUsKCQS.js";
import "./fetch-Cpm1bFFM.js";
import "js-cookie";
import "@radix-ui/react-avatar";
import "./router-e7zdrxGz.js";
import "@tanstack/react-router-ssr-query";
import "@radix-ui/react-slot";
import "class-variance-authority";
import "clsx";
import "tailwind-merge";
import "sonner";
import "framer-motion";
import "react-error-boundary";
import "./popover-8VPYQ3UR.js";
import "@radix-ui/react-popover";
import "./command-DoJaARCj.js";
import "cmdk";
import "./calendar-BN2MwFmY.js";
import "react-day-picker";
import "./separator-BzkEE94Y.js";
import "@radix-ui/react-separator";
import "@radix-ui/react-tooltip";
import "./no-cases-data-B3QWVZUO.js";
import "./noDataConstants-CAKRQRCT.js";
import "./skeleton-BAyQx-Zm.js";
import "./input-CcfBn-WR.js";
import "@radix-ui/react-select";
function NoHearingDateIcon({
  className
}) {
  return /* @__PURE__ */ jsxs(
    "svg",
    {
      width: "185",
      height: "150",
      viewBox: "0 0 185 150",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      className,
      children: [
        /* @__PURE__ */ jsx(
          "path",
          {
            d: "M114.921 30.1037C109.902 26.5752 104.247 21.9992 101.636 17.7717C100.641 16.161 99.53 14.6263 98.2233 13.2566C88.3294 2.88556 68.4727 -11.7274 33.9994 15.9248C30.8958 18.2609 -6.85239 55.5359 1.60494 98.6277C1.71914 99.2097 1.83302 99.789 1.93524 100.373C2.82895 105.478 16.5055 159.073 91.3463 148.662C91.5076 148.646 133.071 145.291 158.763 127.373C169.755 119.707 176.381 107.19 176.798 93.7948C177.117 83.5447 175.294 70.9485 168.948 59.6511C168.397 58.6702 161.375 44.3705 131.776 38.1241C125.648 36.8308 120.045 33.7061 114.921 30.1037Z",
            fill: "#F1F2F6"
          }
        ),
        /* @__PURE__ */ jsx(
          "path",
          {
            d: "M131.83 12.7222H32.5811C31.2163 12.7222 30.1064 13.8161 30.1064 15.1606V146.972C30.1064 148.317 31.2163 149.409 32.5811 149.409H131.83C131.904 149.409 131.976 149.406 132.047 149.4C132.242 149.383 132.43 149.345 132.61 149.285C132.865 149.203 133.101 149.08 133.31 148.925C133.405 148.855 133.496 148.779 133.58 148.695C133.643 148.634 133.702 148.568 133.758 148.5C133.774 148.479 133.79 148.459 133.806 148.438C133.877 148.347 133.941 148.251 133.997 148.15C134.193 147.8 134.305 147.4 134.305 146.973V15.1607C134.305 13.8161 133.195 12.7222 131.83 12.7222Z",
            fill: "white"
          }
        ),
        /* @__PURE__ */ jsx(
          "path",
          {
            d: "M53.0961 37V24.708H54.8521V37H53.0961ZM45.2819 37V24.708H47.0379V37H45.2819ZM46.7394 31.451V30.0111H53.4824V31.451H46.7394ZM61.3389 37.2107C60.496 37.2107 59.7467 37.0176 59.0912 36.6312C58.4356 36.2449 57.9205 35.7064 57.5459 35.0157C57.183 34.325 57.0015 33.5231 57.0015 32.61C57.0015 31.6735 57.183 30.8599 57.5459 30.1692C57.9205 29.4668 58.4356 28.9224 59.0912 28.5361C59.7467 28.1381 60.5077 27.939 61.374 27.939C62.2403 27.939 62.9836 28.1322 63.6041 28.5185C64.2245 28.9048 64.7045 29.4199 65.044 30.0638C65.3835 30.696 65.5533 31.3984 65.5533 32.171C65.5533 32.2881 65.5474 32.4168 65.5357 32.5573C65.5357 32.6861 65.5298 32.8324 65.5181 32.9963H58.2834V31.7496H63.7973C63.7621 31.012 63.5163 30.4384 63.0597 30.0287C62.6032 29.6072 62.0354 29.3965 61.3564 29.3965C60.8764 29.3965 60.4374 29.5077 60.0394 29.7302C59.6414 29.9409 59.3195 30.257 59.0736 30.6784C58.8395 31.0881 58.7224 31.6091 58.7224 32.2412V32.7329C58.7224 33.3885 58.8395 33.9446 59.0736 34.4011C59.3195 34.846 59.6414 35.1855 60.0394 35.4196C60.4374 35.642 60.8706 35.7532 61.3389 35.7532C61.9008 35.7532 62.3632 35.6303 62.7261 35.3845C63.089 35.1386 63.3583 34.805 63.5339 34.3836H65.2899C65.1377 34.9221 64.8801 35.4079 64.5172 35.841C64.1543 36.2625 63.7036 36.5961 63.1651 36.842C62.6383 37.0878 62.0295 37.2107 61.3389 37.2107ZM70.4367 37.2107C69.7109 37.2107 69.108 37.0878 68.628 36.842C68.1481 36.5961 67.791 36.2683 67.5569 35.8586C67.3227 35.4372 67.2057 34.9865 67.2057 34.5065C67.2057 33.9211 67.3579 33.4236 67.6622 33.0139C67.9666 32.5924 68.3998 32.2705 68.9617 32.0481C69.5236 31.8257 70.1967 31.7144 70.9811 31.7144H73.2814C73.2814 31.1993 73.2053 30.7721 73.0532 30.4326C72.901 30.0931 72.6727 29.8414 72.3683 29.6775C72.0756 29.5019 71.701 29.4141 71.2445 29.4141C70.7177 29.4141 70.267 29.5429 69.8924 29.8004C69.5177 30.0462 69.2836 30.415 69.19 30.9067H67.434C67.5042 30.2862 67.7149 29.7594 68.0661 29.3263C68.429 28.8814 68.8914 28.5419 69.4534 28.3078C70.0153 28.062 70.6123 27.939 71.2445 27.939C72.0756 27.939 72.7722 28.0854 73.3341 28.378C73.896 28.6707 74.3175 29.0863 74.5984 29.6248C74.8911 30.1516 75.0374 30.7838 75.0374 31.5213V37H73.5097L73.3692 35.5074C73.2405 35.7415 73.0883 35.964 72.9127 36.1747C72.7371 36.3854 72.5264 36.5669 72.2805 36.719C72.0464 36.8712 71.7713 36.9883 71.4552 37.0702C71.1508 37.1639 70.8113 37.2107 70.4367 37.2107ZM70.7704 35.7884C71.145 35.7884 71.4845 35.7123 71.7888 35.5601C72.0932 35.4079 72.3508 35.203 72.5615 34.9455C72.7839 34.6762 72.9478 34.3777 73.0532 34.0499C73.1702 33.7104 73.2346 33.3651 73.2463 33.0139V32.9612H71.1567C70.6533 32.9612 70.2436 33.0256 69.9275 33.1544C69.6231 33.2714 69.4007 33.4353 69.2602 33.646C69.1197 33.8568 69.0495 34.1026 69.0495 34.3836C69.0495 34.6762 69.1139 34.9279 69.2426 35.1386C69.3831 35.3377 69.5821 35.4957 69.8397 35.6128C70.0972 35.7298 70.4074 35.7884 70.7704 35.7884ZM77.2788 37V28.1498H78.8592L79.0172 29.818C79.2163 29.4199 79.4738 29.0863 79.7899 28.817C80.106 28.5361 80.4747 28.3195 80.8962 28.1673C81.3293 28.0151 81.821 27.939 82.3712 27.939V29.8004H81.739C81.3761 29.8004 81.0308 29.8472 80.703 29.9409C80.3752 30.0228 80.0826 30.1692 79.825 30.3799C79.5792 30.5906 79.386 30.8774 79.2455 31.2403C79.105 31.6032 79.0348 32.0539 79.0348 32.5924V37H77.2788ZM84.1068 37V28.1498H85.8628V37H84.1068ZM85.0023 26.4816C84.6628 26.4816 84.3819 26.3762 84.1594 26.1655C83.9487 25.9548 83.8434 25.6855 83.8434 25.3577C83.8434 25.0416 83.9487 24.7841 84.1594 24.5851C84.3819 24.3744 84.6628 24.269 85.0023 24.269C85.3301 24.269 85.6052 24.3744 85.8276 24.5851C86.0501 24.7841 86.1613 25.0416 86.1613 25.3577C86.1613 25.6855 86.0501 25.9548 85.8276 26.1655C85.6052 26.3762 85.3301 26.4816 85.0023 26.4816ZM88.3738 37V28.1498H89.9542L90.0596 29.6599C90.3406 29.1331 90.7386 28.7175 91.2537 28.4132C91.7688 28.0971 92.36 27.939 93.0272 27.939C93.7296 27.939 94.3325 28.0795 94.8359 28.3605C95.3393 28.6414 95.7315 29.0687 96.0124 29.6424C96.2934 30.2043 96.4339 30.9125 96.4339 31.7671V37H94.6779V31.9427C94.6779 31.1233 94.4964 30.5028 94.1335 30.0814C93.7706 29.6599 93.2438 29.4492 92.5531 29.4492C92.0966 29.4492 91.6868 29.5604 91.3239 29.7828C90.961 29.9936 90.6684 30.3096 90.4459 30.7311C90.2352 31.1525 90.1298 31.6676 90.1298 32.2764V37H88.3738ZM102.28 41.0739C101.472 41.0739 100.758 40.9686 100.138 40.7578C99.5171 40.5588 99.0371 40.2486 98.6976 39.8272C98.3581 39.4057 98.1884 38.8906 98.1884 38.2819C98.1884 37.9658 98.2586 37.6439 98.3991 37.3161C98.5396 37 98.7679 36.6956 99.0839 36.403C99.4 36.1103 99.8273 35.8469 100.366 35.6128L101.349 36.403C100.752 36.6254 100.348 36.8888 100.138 37.1932C99.9385 37.5092 99.839 37.8136 99.839 38.1063C99.839 38.4575 99.9444 38.7501 100.155 38.9843C100.366 39.2184 100.653 39.394 101.016 39.5111C101.39 39.6281 101.812 39.6867 102.28 39.6867C102.736 39.6867 103.134 39.6223 103.474 39.4935C103.813 39.3647 104.077 39.1833 104.264 38.9492C104.451 38.715 104.545 38.4399 104.545 38.1238C104.545 37.7492 104.405 37.4331 104.124 37.1756C103.843 36.9298 103.304 36.7834 102.508 36.7366C101.841 36.6898 101.273 36.6254 100.805 36.5434C100.348 36.4615 99.9561 36.362 99.6283 36.2449C99.3122 36.1279 99.043 35.9991 98.8205 35.8586C98.6098 35.7181 98.4284 35.5718 98.2762 35.4196V35.0157L100.032 33.207L101.455 33.6987L99.5405 35.4723L99.9093 34.6821C100.038 34.764 100.161 34.846 100.278 34.9279C100.395 34.9982 100.553 35.0625 100.752 35.1211C100.951 35.1796 101.22 35.2323 101.56 35.2791C101.899 35.3259 102.344 35.3728 102.894 35.4196C103.691 35.4781 104.329 35.6186 104.808 35.841C105.3 36.0635 105.657 36.362 105.88 36.7366C106.102 37.1112 106.213 37.5561 106.213 38.0712C106.213 38.5745 106.073 39.0545 105.792 39.5111C105.523 39.9676 105.095 40.3423 104.51 40.6349C103.936 40.9276 103.193 41.0739 102.28 41.0739ZM102.28 34.2782C101.531 34.2782 100.893 34.1377 100.366 33.8568C99.8507 33.5758 99.4527 33.1953 99.1717 32.7154C98.9025 32.2354 98.7679 31.7027 98.7679 31.1174C98.7679 30.5204 98.9025 29.9877 99.1717 29.5194C99.4527 29.0395 99.8566 28.659 100.383 28.378C100.91 28.0854 101.542 27.939 102.28 27.939C103.017 27.939 103.644 28.0854 104.159 28.378C104.686 28.659 105.084 29.0395 105.353 29.5194C105.634 29.9877 105.774 30.5204 105.774 31.1174C105.774 31.7027 105.634 32.2354 105.353 32.7154C105.084 33.1953 104.686 33.5758 104.159 33.8568C103.644 34.1377 103.017 34.2782 102.28 34.2782ZM102.28 32.8734C102.853 32.8734 103.31 32.7271 103.65 32.4344C103.989 32.13 104.159 31.691 104.159 31.1174C104.159 30.5438 103.989 30.1106 103.65 29.818C103.31 29.5136 102.853 29.3614 102.28 29.3614C101.706 29.3614 101.244 29.5136 100.893 29.818C100.541 30.1106 100.366 30.5438 100.366 31.1174C100.366 31.691 100.541 32.13 100.893 32.4344C101.244 32.7271 101.706 32.8734 102.28 32.8734ZM103.72 29.537L103.298 28.1498H106.933V29.3614L103.72 29.537Z",
            fill: "#CCCCCC"
          }
        ),
        /* @__PURE__ */ jsx(
          "path",
          {
            d: "M131.83 149.641H32.5811C31.0884 149.641 29.874 148.444 29.874 146.972V15.1602C29.874 13.6874 31.0884 12.4893 32.5811 12.4893H131.83C133.323 12.4893 134.537 13.6874 134.537 15.1602V146.972C134.537 147.422 134.421 147.868 134.2 148.263C134.14 148.37 134.07 148.477 133.991 148.58L133.942 148.642C133.873 148.726 133.807 148.797 133.743 148.86C133.661 148.943 133.565 149.025 133.45 149.111C133.213 149.285 132.955 149.418 132.681 149.506C132.489 149.57 132.282 149.612 132.067 149.631C131.99 149.638 131.91 149.641 131.83 149.641ZM32.5811 12.9541C31.3447 12.9541 30.3388 13.9437 30.3388 15.1602V146.972C30.3388 148.188 31.3447 149.177 32.5811 149.177H131.83C131.897 149.177 131.962 149.174 132.026 149.168C132.205 149.152 132.377 149.117 132.536 149.064C132.765 148.99 132.978 148.881 133.173 148.738C133.268 148.666 133.348 148.598 133.416 148.531C133.47 148.477 133.524 148.417 133.579 148.351L133.623 148.295C133.687 148.212 133.745 148.124 133.794 148.037C133.979 147.706 134.072 147.348 134.072 146.972V15.1602C134.072 13.9437 133.067 12.9541 131.83 12.9541H32.5811Z",
            fill: "#1D3956"
          }
        ),
        /* @__PURE__ */ jsx(
          "path",
          {
            d: "M118.631 95.5811H45.7803V96.5582H118.631V95.5811Z",
            fill: "#CCCCCC"
          }
        ),
        /* @__PURE__ */ jsx(
          "path",
          {
            d: "M118.631 89.7344H45.7803V90.7116H118.631V89.7344Z",
            fill: "#CCCCCC"
          }
        ),
        /* @__PURE__ */ jsx(
          "path",
          {
            d: "M118.631 83.8877H45.7803V84.8649H118.631V83.8877Z",
            fill: "#CCCCCC"
          }
        ),
        /* @__PURE__ */ jsx(
          "path",
          {
            d: "M118.631 78.041H45.7803V79.0182H118.631V78.041Z",
            fill: "#CCCCCC"
          }
        ),
        /* @__PURE__ */ jsx(
          "path",
          {
            d: "M118.631 72.1938H45.7803V73.171H118.631V72.1938Z",
            fill: "#CCCCCC"
          }
        ),
        /* @__PURE__ */ jsx(
          "path",
          {
            d: "M118.631 66.3477H45.7803V67.3248H118.631V66.3477Z",
            fill: "#CCCCCC"
          }
        ),
        /* @__PURE__ */ jsx(
          "path",
          {
            d: "M118.631 60.5005H45.7803V61.4777H118.631V60.5005Z",
            fill: "#CCCCCC"
          }
        ),
        /* @__PURE__ */ jsx(
          "path",
          {
            d: "M118.631 54.6543H45.7803V55.6315H118.631V54.6543Z",
            fill: "#CCCCCC"
          }
        ),
        /* @__PURE__ */ jsx(
          "path",
          {
            d: "M118.631 49.8394H45.7803V50.8166H118.631V49.8394Z",
            fill: "#CCCCCC"
          }
        ),
        /* @__PURE__ */ jsx(
          "path",
          {
            d: "M118.593 102.365L45.7891 102.444L45.7793 101.471L118.592 101.388L118.593 102.365Z",
            fill: "#CCCCCC"
          }
        ),
        /* @__PURE__ */ jsx(
          "path",
          {
            d: "M118.631 107.274H45.7803V108.252H118.631V107.274Z",
            fill: "#CCCCCC"
          }
        ),
        /* @__PURE__ */ jsx(
          "path",
          {
            d: "M118.631 113.121H45.7803V114.098H118.631V113.121Z",
            fill: "#CCCCCC"
          }
        ),
        /* @__PURE__ */ jsx(
          "path",
          {
            d: "M118.631 118.968H45.7803V119.945H118.631V118.968Z",
            fill: "#CCCCCC"
          }
        ),
        /* @__PURE__ */ jsx(
          "path",
          {
            d: "M79.6866 124.814H45.7803V125.792H79.6866V124.814Z",
            fill: "#CCCCCC"
          }
        ),
        /* @__PURE__ */ jsx(
          "path",
          {
            d: "M64.2456 130.556H45.7783V131.744H64.2456V130.556Z",
            fill: "#CCCCCC"
          }
        ),
        /* @__PURE__ */ jsx(
          "path",
          {
            d: "M181.365 138.124C181.351 138.076 181.332 138.03 181.307 137.988C181.295 137.966 181.28 137.943 181.264 137.923C181.227 137.874 181.182 137.831 181.131 137.796C181.114 137.785 181.097 137.774 181.079 137.764L180.914 137.673L145.437 118.104L145.229 117.99L145.021 117.875L143.02 121.405L142.852 121.702L143.057 121.821L143.058 121.822L143.263 121.941L178.259 142.309L178.442 142.416C178.453 142.422 178.464 142.429 178.475 142.434C178.53 142.462 178.587 142.481 178.646 142.49C178.672 142.494 178.698 142.497 178.725 142.498H178.741C178.794 142.498 178.847 142.491 178.899 142.477C178.935 142.467 178.968 142.454 179.002 142.439H179.003C179.111 142.386 179.201 142.302 179.262 142.195L181.31 138.581C181.363 138.487 181.39 138.384 181.387 138.278V138.277C181.387 138.226 181.379 138.174 181.365 138.124Z",
            fill: "#7D7D7D"
          }
        ),
        /* @__PURE__ */ jsx(
          "path",
          {
            d: "M184.075 138.163C184.022 137.975 183.9 137.819 183.729 137.723L182.218 136.875C181.865 136.677 181.414 136.8 181.214 137.15L180.914 137.673L180.871 137.749L180.796 137.88L180.678 138.086L180.49 138.413L179.364 140.381L178.496 141.898L178.459 141.962L178.378 142.104L178.26 142.31L177.845 143.035C177.644 143.384 177.769 143.83 178.123 144.028L179.633 144.876C179.747 144.939 179.872 144.97 179.995 144.97C180.252 144.97 180.502 144.837 180.637 144.601L184.006 138.716C184.103 138.547 184.127 138.35 184.075 138.163Z",
            fill: "#BDBDBD"
          }
        ),
        /* @__PURE__ */ jsx(
          "path",
          {
            d: "M145.566 117.372C145.505 117.153 145.363 116.97 145.165 116.858L143.42 115.87L143.644 115.475C143.771 115.251 143.692 114.964 143.468 114.838L142.075 114.048L141.868 113.93L141.7 113.835L137.68 120.929L137.847 121.024L138.055 121.142L139.448 121.932C139.519 121.972 139.598 121.993 139.678 121.993C139.719 121.993 139.761 121.986 139.803 121.976C139.923 121.942 140.024 121.864 140.085 121.755L140.309 121.36L142.053 122.349C142.186 122.424 142.329 122.459 142.472 122.459C142.543 122.459 142.615 122.45 142.684 122.432L142.704 122.444L142.716 122.424C142.716 122.424 142.716 122.424 142.716 122.424C142.921 122.364 143.101 122.227 143.214 122.028L143.263 121.942L143.381 121.735L143.461 121.594L143.498 121.528L145.022 118.839L145.203 118.519L145.32 118.312L145.386 118.195L145.395 118.18L145.438 118.104L145.486 118.019C145.598 117.821 145.626 117.591 145.566 117.372Z",
            fill: "#BDBDBD"
          }
        ),
        /* @__PURE__ */ jsx(
          "path",
          {
            d: "M137.662 109.067L137.076 108.734L136.489 108.402L136.426 108.366L132.989 106.418L126.984 103.015L126.969 103.042L126.867 103.223L126.75 103.43L125.565 105.519L125.448 105.726L122.549 110.843L122.096 111.641L121.116 113.371L120.998 113.579L120.896 113.76L120.881 113.786L132.729 120.5L136.426 122.595L136.489 122.631L136.664 122.73L137.036 122.941L137.051 122.914L137.076 122.87L137.153 122.734L137.189 122.67V122.669L137.27 122.526L137.662 121.836L138.056 121.141L138.173 120.934V120.933L141.958 114.255V114.254L142.076 114.047L142.905 112.585L143.022 112.378L143.125 112.198L143.14 112.171L137.662 109.067Z",
            fill: "#828282"
          }
        ),
        /* @__PURE__ */ jsx(
          "path",
          {
            d: "M148.806 104.709C148.749 104.502 148.615 104.329 148.428 104.222L147.627 103.769L147.42 103.652L147.318 103.594L147.213 103.534L137.661 98.1218L137.076 97.7894L136.489 97.4571L136.425 97.4213L132.989 95.4732L132.438 95.1625V95.1615L132.3 95.0836L132.196 95.0245L132.093 94.9662L131.995 94.9098H131.994L131.886 94.8489L131.085 94.3948C130.699 94.1763 130.205 94.3124 129.987 94.6985L127.847 98.4748C127.628 98.8608 127.764 99.3543 128.151 99.5729L129.432 100.299L129.681 100.44L129.883 100.555L129.92 100.575L132.988 102.315L136.425 104.262L136.489 104.298L137.075 104.63L137.661 104.963L143.761 108.419L143.842 108.466L144.012 108.562L144.269 108.708L145.493 109.401C145.616 109.471 145.751 109.506 145.889 109.506C145.961 109.506 146.034 109.497 146.105 109.477C146.313 109.419 146.486 109.284 146.591 109.097L148.731 105.322C148.838 105.134 148.864 104.916 148.806 104.709Z",
            fill: "#7D7D7D"
          }
        ),
        /* @__PURE__ */ jsx(
          "path",
          {
            d: "M137.076 103.946L136.489 103.614L136.425 103.577L132.989 101.63L129.272 99.5229L129.307 99.6806L129.334 99.7989L129.378 99.9942L129.391 100.048C129.411 100.134 129.424 100.218 129.433 100.299C129.472 100.649 129.411 100.953 129.253 101.202C128.936 101.703 128.32 101.846 128.314 101.847L128.305 101.849L127.957 101.925L127.74 101.972L127.729 101.974L128.243 102.284C128.55 102.47 129.386 102.973 130.511 103.646C131.238 104.081 132.085 104.586 132.989 105.123C134.091 105.777 135.275 106.476 136.426 107.149C136.447 107.162 136.468 107.174 136.489 107.186C136.686 107.301 136.882 107.416 137.076 107.529C137.273 107.643 137.468 107.757 137.662 107.869C140.206 109.344 142.353 110.544 142.703 110.598L142.809 110.615L143.053 110.654L143.052 110.65L143.005 110.453L142.971 110.309C142.958 110.253 142.95 110.2 142.947 110.147C142.901 109.386 143.823 108.897 144.269 108.707C144.408 108.647 144.5 108.616 144.505 108.615L144.56 108.597L144.753 108.536L144.869 108.499L145.023 108.449L137.662 104.278L137.076 103.946Z",
            fill: "#BDBDBD"
          }
        ),
        /* @__PURE__ */ jsx(
          "path",
          {
            d: "M148.161 102.297C148.098 102.068 147.949 101.877 147.743 101.759L137.661 96.0468L137.075 95.7144L136.489 95.3821L136.425 95.3463L133.549 93.7161C133.376 93.6184 133.181 93.5817 132.988 93.6087C132.95 93.614 132.911 93.6221 132.873 93.6328C132.644 93.6964 132.453 93.8451 132.337 94.0511L131.886 94.8483L131.768 95.0552L131.689 95.1959L131.651 95.2622L132.988 96.02L136.425 97.9673V97.9682L136.488 98.004L137.075 98.3363L137.661 98.6677V98.6687L147.392 104.183L147.429 104.116L147.509 103.976L147.626 103.769L148.078 102.972C148.195 102.765 148.225 102.525 148.161 102.297Z",
            fill: "#BDBDBD"
          }
        ),
        /* @__PURE__ */ jsx(
          "path",
          {
            d: "M144.099 110.8L142.947 110.147L142.709 110.011L142.548 109.92L142.481 109.882L137.661 107.151L137.075 106.819L136.488 106.487L136.425 106.451L132.988 104.503L130.762 103.241L128.754 102.104L128.586 102.008L128.304 101.849L127.666 101.487C127.371 101.319 126.996 101.423 126.829 101.718L126.378 102.513C126.297 102.657 126.277 102.822 126.32 102.98C126.364 103.139 126.466 103.27 126.61 103.351L126.749 103.43L126.956 103.547L127.058 103.604L127.162 103.664L132.988 106.965V106.966L136.425 108.913L136.488 108.949L137.075 109.281L137.661 109.614L141.775 111.944V111.945L142.489 112.35L142.504 112.358L142.696 112.467L142.799 112.525L142.904 112.585L143.043 112.664C143.138 112.717 143.242 112.743 143.344 112.743C143.558 112.743 143.767 112.631 143.88 112.432L144.33 111.636C144.498 111.342 144.394 110.966 144.099 110.8Z",
            fill: "#7D7D7D"
          }
        ),
        /* @__PURE__ */ jsx(
          "path",
          {
            d: "M136.226 126.909C136.169 126.701 136.034 126.528 135.846 126.422L134.622 125.728L134.366 125.583L134.349 125.574L134.114 125.441L131.973 124.227L120.273 117.596L120.231 117.573L120.201 117.556L120.035 117.461L119.787 117.32H119.786L118.793 116.758L118.504 116.594C118.169 116.404 117.754 116.482 117.507 116.758C117.469 116.8 117.435 116.848 117.406 116.899L117.033 117.556L115.266 120.674C115.16 120.861 115.133 121.079 115.191 121.287C115.248 121.494 115.382 121.666 115.569 121.773L116.37 122.227L116.577 122.345L116.77 122.454L116.785 122.462L117.157 122.672H117.158L118.567 123.471H118.568L129.713 129.788H129.714L131.698 130.912L131.905 131.029L132.097 131.138L132.112 131.147L132.912 131.601C133.038 131.671 133.174 131.705 133.308 131.705C133.589 131.705 133.863 131.558 134.011 131.296L136.15 127.521C136.257 127.334 136.284 127.116 136.226 126.909Z",
            fill: "#7D7D7D"
          }
        ),
        /* @__PURE__ */ jsx(
          "path",
          {
            d: "M135.486 123.467L135.44 123.413C135.436 123.408 135.431 123.403 135.426 123.398C135.221 123.184 134.096 122.511 132.553 121.636C130.434 120.433 127.525 118.849 125.126 117.556C125.059 117.519 124.993 117.483 124.927 117.447L124.918 117.443C124.493 117.215 124.085 116.995 123.703 116.79H123.702C123.681 116.778 123.662 116.768 123.643 116.758C122.271 116.022 121.232 115.468 120.877 115.279L120.347 114.998L120.401 115.156L120.516 115.495L120.539 115.565C120.541 115.571 120.736 116.165 120.469 116.699C120.459 116.718 120.449 116.738 120.438 116.758C120.301 116.995 120.082 117.184 119.786 117.32H119.785C119.711 117.354 119.632 117.384 119.549 117.412L119.496 117.43H119.495L119.438 117.448H119.437L119.19 117.531L119.113 117.556L119.037 117.581L131.802 124.814L134.788 126.506L134.751 126.349L134.691 126.092L134.678 126.033L134.664 125.977C134.663 125.973 134.642 125.878 134.621 125.728C134.553 125.235 134.496 124.158 135.226 123.832C135.259 123.817 135.293 123.803 135.33 123.791L135.528 123.729H135.529L135.667 123.684L135.486 123.467Z",
            fill: "#BDBDBD"
          }
        ),
        /* @__PURE__ */ jsx(
          "path",
          {
            d: "M119.532 123.471H119.531L118.122 122.672H118.121L116.604 121.812L116.589 121.838L116.487 122.019L116.369 122.227L116.117 122.672L115.951 122.964C115.863 123.12 115.825 123.296 115.838 123.471C115.842 123.528 115.852 123.584 115.868 123.64C115.931 123.868 116.08 124.059 116.287 124.176L128.818 131.277L130.48 132.219C130.619 132.297 130.768 132.335 130.917 132.335C131.227 132.335 131.529 132.173 131.693 131.885L132.11 131.147L132.228 130.94L132.33 130.759L132.345 130.733L129.939 129.369L119.532 123.471Z",
            fill: "#BDBDBD"
          }
        ),
        /* @__PURE__ */ jsx(
          "path",
          {
            d: "M137.698 122.976C137.689 122.942 137.677 122.909 137.661 122.877C137.608 122.764 137.521 122.669 137.409 122.605L137.27 122.526L137.076 122.416L137.063 122.409L136.871 122.301L136.856 122.293V122.292L136.489 122.084L136.425 122.048L132.791 119.989L124.621 115.358L123.132 114.514H123.131L122.154 113.96L121.529 113.606L121.424 113.546L121.322 113.489L121.13 113.38L121.115 113.372L120.976 113.293C120.682 113.126 120.306 113.23 120.139 113.525L119.688 114.32C119.521 114.615 119.625 114.99 119.92 115.158L120.517 115.496L120.809 115.662L122.744 116.758L123.6 117.244L123.616 117.253L124.152 117.556L124.683 117.857L132.44 122.252L134.749 123.562L134.981 123.693L135.207 123.821L135.227 123.832L136.353 124.47C136.376 124.484 136.4 124.495 136.425 124.505C136.446 124.513 136.467 124.52 136.489 124.527C136.544 124.542 136.599 124.55 136.655 124.55C136.81 124.55 136.961 124.492 137.076 124.384C137.12 124.342 137.159 124.294 137.19 124.238L137.641 123.443C137.648 123.43 137.655 123.417 137.661 123.403C137.725 123.271 137.738 123.12 137.698 122.976Z",
            fill: "#7D7D7D"
          }
        ),
        /* @__PURE__ */ jsx(
          "path",
          {
            d: "M134.814 139.361H108.294C107.511 139.361 106.874 139.999 106.874 140.78V141.711H136.234V140.78C136.234 139.998 135.597 139.361 134.814 139.361Z",
            fill: "#828282"
          }
        ),
        /* @__PURE__ */ jsx(
          "path",
          {
            d: "M140.483 144.393C140.142 142.964 139.057 141.82 137.661 141.398C137.471 141.34 137.276 141.296 137.075 141.266C136.884 141.237 136.688 141.222 136.489 141.221H106.643C105.234 141.221 103.988 141.931 103.242 143.011C102.942 143.446 102.723 143.941 102.608 144.475C102.546 144.757 102.514 145.05 102.514 145.35V147.194H140.595V145.35C140.595 145.021 140.556 144.7 140.483 144.393Z",
            fill: "#BDBDBD"
          }
        ),
        /* @__PURE__ */ jsx(
          "path",
          {
            d: "M141.816 146.606H101.292C101.129 146.606 100.973 146.637 100.83 146.695C100.551 146.806 100.32 147.015 100.182 147.28C100.162 147.317 100.144 147.356 100.129 147.394C100.071 147.538 100.039 147.695 100.039 147.859V148.388C100.039 149.079 100.602 149.641 101.292 149.641H141.816C142.508 149.641 143.069 149.079 143.069 148.388V147.859C143.069 147.169 142.508 146.606 141.816 146.606Z",
            fill: "#7D7D7D"
          }
        ),
        /* @__PURE__ */ jsx(
          "path",
          {
            d: "M155.848 149.658H20.1829C19.916 149.658 19.6997 149.546 19.6997 149.409C19.6997 149.272 19.916 149.16 20.1829 149.16H155.847C156.114 149.16 156.331 149.272 156.331 149.409C156.331 149.546 156.114 149.658 155.848 149.658Z",
            fill: "#1D3956"
          }
        )
      ]
    }
  );
}
const NoDueDateIcon = ({ className }) => {
  return /* @__PURE__ */ jsxs(
    "svg",
    {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 64 80",
      x: "0px",
      y: "0px",
      className,
      children: [
        /* @__PURE__ */ jsx("title", { children: "due-date-calendar" }),
        /* @__PURE__ */ jsxs("g", { "data-name": "Outline Icon", children: [
          /* @__PURE__ */ jsx("path", { d: "M57.414,7H52V6a4,4,0,0,0-4-4H47a4,4,0,0,0-4,4V7.5H27V6a4,4,0,0,0-4-4H22a4,4,0,0,0-4,4V7H12.586A4.6,4.6,0,0,0,8,11.6V29.771a1,1,0,0,0,2,0V21H47a1,1,0,0,0,0-2H10V11.6A2.6,2.6,0,0,1,12.586,9H18v2a4,4,0,0,0,4,4h1a4,4,0,0,0,4-4V9.5H43V11a4,4,0,0,0,4,4h1a4,4,0,0,0,4-4V9h5.414A2.6,2.6,0,0,1,60,11.6V19H54a1,1,0,0,0,0,2h6V49.4A2.6,2.6,0,0,1,57.414,52H35a1,1,0,0,0,0,2H57.414A4.6,4.6,0,0,0,62,49.4V11.6A4.6,4.6,0,0,0,57.414,7ZM25,11a2,2,0,0,1-2,2H22a2,2,0,0,1-2-2V6a2,2,0,0,1,2-2h1a2,2,0,0,1,2,2Zm25,0a2,2,0,0,1-2,2H47a2,2,0,0,1-2-2V6a2,2,0,0,1,2-2h1a2,2,0,0,1,2,2Z" }),
          /* @__PURE__ */ jsx("path", { d: "M17,32A15,15,0,1,0,32,47,15.017,15.017,0,0,0,17,32Zm0,28A13,13,0,1,1,30,47,13.015,13.015,0,0,1,17,60Z" }),
          /* @__PURE__ */ jsx("path", { d: "M23,46H18V40a1,1,0,0,0-2,0v8h7a1,1,0,0,0,0-2Z" })
        ] })
      ]
    }
  );
};
const HearingCard = ({
  title,
  bg,
  data,
  isLoading,
  dateRange,
  setDateRange,
  dateField,
  emptyState,
  label,
  showOverdue = false,
  hasNextPage,
  fetchNextPage,
  isFetchingNextPage,
  scrollRef,
  handleRoute
}) => {
  return /* @__PURE__ */ jsxs("div", { className: `h-full ${bg} p-2`, children: [
    /* @__PURE__ */ jsxs("div", { className: "flex mb-2 justify-between items-center", children: [
      /* @__PURE__ */ jsx("div", { className: "text-xs", children: title }),
      /* @__PURE__ */ jsx(
        CustomDateRangePicker,
        {
          date: dateRange,
          setDate: setDateRange,
          mode: "day-month"
        }
      )
    ] }),
    /* @__PURE__ */ jsx("div", { className: "h-[calc(100%-40px)]  p-2 space-y-2", children: isLoading ? /* @__PURE__ */ jsx("div", { className: "flex justify-center items-center h-full", children: /* @__PURE__ */ jsx(Loader2, { className: "animate-spin w-6 h-6 text-gray-500" }) }) : data?.length === 0 ? /* @__PURE__ */ jsx("div", { className: "flex flex-col items-center justify-center h-full", children: emptyState }) : /* @__PURE__ */ jsxs("div", { className: "h-full space-y-1.5 overflow-auto ", children: [
      data?.map((item, index) => {
        const dateVal = item?.[dateField] ? new Date(item?.[dateField]) : null;
        const isValidDate = dateVal && !isNaN(dateVal.getTime());
        let month = "--", day = "--", time = "--";
        if (isValidDate) {
          const dayjsDate = dayjs(dateVal).tz("Asia/Kolkata");
          month = dayjsDate.format("MMM");
          day = dayjsDate.format("DD");
          time = dayjsDate.format("hh:mm A");
        }
        const userName = item?.user ? `${item?.user.first_name || ""} ${item?.user.last_name || ""}`.trim() : "--";
        return /* @__PURE__ */ jsxs(
          "div",
          {
            className: "bg-white cursor-pointer flex items-center border border-gray-300",
            onClick: () => {
              if (handleRoute) {
                handleRoute(item?.id);
              }
            },
            children: [
              /* @__PURE__ */ jsxs("div", { className: "flex flex-col items-center min-w-[60px]", children: [
                showOverdue && item?.status === "OVERDUE" && /* @__PURE__ */ jsx("div", { className: "bg-red-500 w-full text-center text-xs text-white", children: "Overdue" }),
                /* @__PURE__ */ jsxs("div", { className: "p-2 flex flex-col items-center justify-center", children: [
                  /* @__PURE__ */ jsx("div", { className: "text-xs", children: month }),
                  /* @__PURE__ */ jsx("div", { className: "text-lg font-medium", children: day }),
                  /* @__PURE__ */ jsx("div", { className: "text-xs", children: time })
                ] })
              ] }),
              /* @__PURE__ */ jsx("div", { className: "h-16 mr-2 w-[0.5px] bg-gray-300" }),
              /* @__PURE__ */ jsxs("div", { className: "flex justify-between flex-1 p-2", children: [
                /* @__PURE__ */ jsxs("div", { className: "space-y-1  flex flex-col justify-between", children: [
                  /* @__PURE__ */ jsx("div", { className: "text-xs", children: item?.organisation_name || "--" }),
                  /* @__PURE__ */ jsxs("div", { children: [
                    /* @__PURE__ */ jsx("div", { className: "text-xs", children: userName }),
                    /* @__PURE__ */ jsx("div", { className: "text-xs text-gray-400 font-light", children: "Client" })
                  ] })
                ] }),
                /* @__PURE__ */ jsxs("div", { className: "space-y-1  flex flex-col items-center", children: [
                  /* @__PURE__ */ jsx("div", { className: "text-xs", children: label }),
                  /* @__PURE__ */ jsx("div", { className: "flex items-center", children: item?.advocate_cases?.length > 0 ? /* @__PURE__ */ jsx(TooltipProvider, { children: /* @__PURE__ */ jsxs(Tooltip, { children: [
                    /* @__PURE__ */ jsx(TooltipTrigger, { asChild: true, children: /* @__PURE__ */ jsxs("div", { className: "flex -space-x-2", children: [
                      item.advocate_cases.slice(0, 2).map((advocate, idx) => {
                        const firstName = advocate?.advocate.first_name || "";
                        const lastName = advocate?.advocate.last_name || "";
                        const initials = (firstName.charAt(0) || "").toUpperCase() + (lastName.charAt(0) || "").toUpperCase();
                        return /* @__PURE__ */ jsxs(
                          Avatar,
                          {
                            className: "border size-6",
                            children: [
                              /* @__PURE__ */ jsx(
                                AvatarImage,
                                {
                                  src: advocate?.advocate.profile_pic,
                                  alt: firstName
                                }
                              ),
                              /* @__PURE__ */ jsx(AvatarFallback, { className: "bg-gray-100 text-xs", children: initials || /* @__PURE__ */ jsx(User, { className: "w-3 h-3" }) })
                            ]
                          },
                          idx
                        );
                      }),
                      item.advocate_cases.length > 2 && /* @__PURE__ */ jsxs(Avatar, { className: "border size-6 bg-gray-200 text-[10px] flex items-center justify-center", children: [
                        "+",
                        item.advocate_cases.length - 2
                      ] })
                    ] }) }),
                    /* @__PURE__ */ jsx(TooltipContent, { className: "bg-white shadow-lg p-2 rounded text-sm", children: /* @__PURE__ */ jsx("div", { className: "space-y-1", children: item.advocate_cases.map(
                      (adv, i) => /* @__PURE__ */ jsxs(
                        "div",
                        {
                          className: "flex items-center gap-2",
                          children: [
                            /* @__PURE__ */ jsxs(Avatar, { className: "size-5 border", children: [
                              /* @__PURE__ */ jsx(
                                AvatarImage,
                                {
                                  src: adv?.advocate.profile_pic
                                }
                              ),
                              /* @__PURE__ */ jsx(AvatarFallback, { className: "bg-gray-100 text-xs", children: (adv?.advocate.first_name?.[0] || "") + (adv?.advocate.last_name?.[0] || "") })
                            ] }),
                            /* @__PURE__ */ jsx("span", { children: `${adv?.advocate.first_name || ""} ${adv?.advocate.last_name || ""}` })
                          ]
                        },
                        i
                      )
                    ) }) })
                  ] }) }) : /* @__PURE__ */ jsx("div", { className: "flex items-center gap-2", children: /* @__PURE__ */ jsx(Avatar, { className: "size-6", children: /* @__PURE__ */ jsx(AvatarFallback, { className: "flex items-center bg-gray-100 text-gray-500 text-xs", children: /* @__PURE__ */ jsx(User, { className: "w-4 h-4" }) }) }) }) }),
                  /* @__PURE__ */ jsx("div", { className: "text-xs text-gray-400 font-light", children: item?.advocate_cases?.length == 0 ? "No Advocate" : "Advocate" })
                ] })
              ] })
            ]
          },
          index
        );
      }),
      hasNextPage && /* @__PURE__ */ jsx(
        "div",
        {
          ref: scrollRef,
          className: "h-8 flex justify-center items-center",
          children: isFetchingNextPage && /* @__PURE__ */ jsx(Loader2, { className: "animate-spin h-5 w-5 text-gray-500" })
        }
      )
    ] }) })
  ] });
};
dayjs.extend(utc);
dayjs.extend(tz);
const CalendarHearingsSection = () => {
  const [selectedDate, setSelectedDate] = useState();
  const [dueDateRange, setDueDateRange] = useState();
  const [isMarqueeActive, setIsMarqueeActive] = useState(true);
  const [calendarWeeks, setCalendarWeeks] = useState(6);
  const scrollRef = useRef(null);
  const navigate = useNavigate();
  const {
    isLoading,
    data: hearingData,
    refetch: refetchHearingDate
  } = useQuery({
    queryKey: ["getAllNextHearingDetails", selectedDate],
    queryFn: async () => {
      try {
        let queryParams = {};
        if (selectedDate) {
          queryParams = {
            from_date: dayjs(selectedDate?.from).format("YYYY-MM-DD"),
            to_date: dayjs(selectedDate?.to).format("YYYY-MM-DD")
          };
        }
        const response = await getNextHearingDateAPI(queryParams);
        if (response.status == 200 || response.status == 201) {
          const data = response?.data?.data?.records;
          return data;
        } else {
          throw new Error("Failed to fetch next hearing details");
        }
      } catch (err) {
        console.error("API Error:", err);
        return null;
      }
    },
    enabled: true,
    refetchOnWindowFocus: false
  });
  const {
    data: dueDateData,
    isLoading: dueDateLoading,
    fetchNextPage,
    hasNextPage,
    isFetchingNextPage
  } = useInfiniteQuery({
    queryKey: ["getDueDate", dueDateRange],
    queryFn: async ({ pageParam = 1 }) => {
      try {
        let queryParams = {};
        if (dueDateRange) {
          queryParams.from_date = dayjs(dueDateRange?.from).format(
            "YYYY-MM-DD"
          );
          queryParams.to_date = dayjs(dueDateRange?.to).format("YYYY-MM-DD");
        }
        const response = await getDueDateAPI(queryParams);
        if (response.status == 200 || response.status == 201) {
          const data = response?.data?.data;
          return data;
        } else {
          throw new Error("Failed to fetch next hearing details");
        }
      } catch (err) {
        console.error("API Error:", err);
        return null;
      }
    },
    initialPageParam: 1,
    getNextPageParam: (lastPage) => {
      const currentPage = lastPage?.pagination_info?.current_page;
      const totalPages = lastPage?.pagination_info?.total_pages;
      return currentPage && currentPage < totalPages ? currentPage + 1 : null;
    }
  });
  const allDueDateData = dueDateData?.pages?.flatMap((page) => page?.records) || [];
  useMemo(() => {
    let hearingsToProcess = [];
    if (Array.isArray(hearingData)) {
      hearingsToProcess = hearingData;
    } else if (hearingData?.records) {
      hearingsToProcess = hearingData.records;
    }
    if (hearingsToProcess.length === 0) {
      return [];
    }
    return hearingsToProcess.map(
      (record) => dayjs(record.next_hearing_date).format("YYYY-MM-DD")
    );
  }, [hearingData]);
  const currentHearings = useMemo(() => {
    if (Array.isArray(hearingData)) {
      return hearingData;
    }
    if (!hearingData?.records) return [];
    return hearingData.records;
  }, [hearingData]);
  const duplicatedHearings = currentHearings || [];
  const shouldAutoScroll = duplicatedHearings.length > 5 && isMarqueeActive;
  duplicatedHearings.length >= 2 && duplicatedHearings.length <= 5;
  const containerHeight = calendarWeeks === 6 ? "h-[calc(100vh-435px)]" : calendarWeeks === 4 ? "h-[calc(100vh-355px)]" : "h-[calc(100vh-400px)]";
  const handleHearingRoute = (id) => {
    navigate({
      to: `/litigations/service/${id}/case-history`
    });
  };
  const handleDueDateRoute = (id) => {
    navigate({
      to: `/legal-opinion/service/${id}/notes`
    });
  };
  useEffect(() => {
    if (!scrollRef.current) return;
    const observer = new IntersectionObserver((entries) => {
      if (entries[0].isIntersecting && hasNextPage && !isFetchingNextPage) {
        fetchNextPage();
      }
    });
    observer.observe(scrollRef.current);
    return () => observer.disconnect();
  }, [fetchNextPage, hasNextPage, isFetchingNextPage]);
  return /* @__PURE__ */ jsxs(Fragment, { children: [
    /* @__PURE__ */ jsx("style", { children: `
        @keyframes marquee-vertical {
          0% { transform: translateY(0); }
          100% { transform: translateY(-50%); }
        }
        .marquee-container {
          ${containerHeight};
          overflow: hidden;
          position: relative;
        }
        .scroll-container {
          ${containerHeight};
          overflow-y: auto;
          position: relative;
        }
        .marquee-content {
          animation: ${shouldAutoScroll ? "marquee-vertical 20s linear infinite" : "none"};
          display: flex;
          flex-direction: column;
        }
        .marquee-content:hover {
          animation-play-state: paused;
        }
      ` }),
    /* @__PURE__ */ jsxs("div", { className: "col-span-3 bg-white p-2 ", children: [
      /* @__PURE__ */ jsx("div", { className: " h-[calc((100vh-85px)/2)] ", children: /* @__PURE__ */ jsx(
        HearingCard,
        {
          title: "Next Hearing",
          bg: "bg-slate-50",
          data: currentHearings,
          isLoading,
          dateRange: selectedDate,
          setDateRange: setSelectedDate,
          dateField: "next_hearing_date",
          emptyState: /* @__PURE__ */ jsxs(Fragment, { children: [
            /* @__PURE__ */ jsx(NoHearingDateIcon, {}),
            /* @__PURE__ */ jsx("span", { className: "text-sm text-gray-500 mt-2", children: "No Upcoming Hearings" })
          ] }),
          label: "Litigation",
          handleRoute: handleHearingRoute
        }
      ) }),
      /* @__PURE__ */ jsx("div", { className: "  h-[calc((100vh-85px)/2)] ", children: /* @__PURE__ */ jsx(
        HearingCard,
        {
          title: "Due Dates",
          bg: "bg-red-50",
          data: allDueDateData,
          isLoading: dueDateLoading,
          dateRange: dueDateRange,
          setDateRange: setDueDateRange,
          dateField: "due_date",
          emptyState: /* @__PURE__ */ jsxs(Fragment, { children: [
            /* @__PURE__ */ jsx(NoDueDateIcon, { className: "w-20" }),
            /* @__PURE__ */ jsx("span", { className: "text-sm text-gray-500 mt-2", children: "No Due Dates" })
          ] }),
          label: "Legal Notices",
          showOverdue: true,
          hasNextPage,
          fetchNextPage,
          isFetchingNextPage,
          scrollRef,
          handleRoute: handleDueDateRoute
        }
      ) })
    ] })
  ] });
};
const LegalCasesIcon = ({ className }) => /* @__PURE__ */ jsxs(
  "svg",
  {
    xmlns: "http://www.w3.org/2000/svg",
    width: "20",
    height: "18",
    viewBox: "0 0 20 18",
    fill: "none",
    className,
    children: [
      /* @__PURE__ */ jsx(
        "path",
        {
          d: "M3.36157 11.9783C1.71041 11.9783 0.370605 10.6354 0.370605 8.98736C0.370605 8.81438 0.512134 8.67285 0.685113 8.67285H6.04117C6.21415 8.67285 6.35568 8.81438 6.35568 8.98736C6.35568 10.6385 5.01273 11.9783 3.36157 11.9783ZM1.02164 9.30187C1.17574 10.4561 2.16644 11.3493 3.36471 11.3493C4.56299 11.3493 5.55368 10.4561 5.70779 9.30187H1.02164Z",
          fill: "currentColor"
        }
      ),
      /* @__PURE__ */ jsx(
        "path",
        {
          d: "M6.04146 9.30206C5.9188 9.30206 5.80558 9.23287 5.75211 9.11335L3.36186 3.65351L0.971603 9.11335C0.902412 9.27061 0.716853 9.34609 0.556454 9.27375C0.396055 9.20456 0.323719 9.019 0.39291 8.8586L3.06937 2.74144C3.11969 2.62822 3.23291 2.55273 3.35871 2.55273C3.48452 2.55273 3.59774 2.62822 3.64806 2.74144L6.32452 8.8586C6.39371 9.019 6.32137 9.20456 6.16097 9.27375C6.12638 9.29262 6.08235 9.30206 6.04146 9.30206Z",
          fill: "currentColor"
        }
      ),
      /* @__PURE__ */ jsx(
        "path",
        {
          d: "M8.16076 3.18442H3.36138C3.1884 3.18442 3.04688 3.04289 3.04688 2.86991C3.04688 2.07736 3.69161 1.43262 4.48417 1.43262H8.16076C8.2614 1.43262 8.35576 1.47979 8.41551 1.56471C8.47527 1.64648 8.49099 1.75341 8.45954 1.84777C8.40922 1.99873 8.38406 2.15284 8.38406 2.30695C8.38406 2.4642 8.40922 2.62145 8.45954 2.77242C8.49099 2.86677 8.47527 2.9737 8.41551 3.05547C8.3589 3.13725 8.2614 3.18442 8.16076 3.18442ZM3.74194 2.55541H7.77077C7.76134 2.47364 7.75505 2.38872 7.75505 2.30695C7.75505 2.22518 7.76134 2.1434 7.77077 2.06163H4.48732C4.15079 2.06163 3.86459 2.26606 3.74194 2.55541Z",
          fill: "currentColor"
        }
      ),
      /* @__PURE__ */ jsx(
        "path",
        {
          d: "M16.3696 3.18464H11.5671C11.4664 3.18464 11.3721 3.13746 11.3123 3.05254C11.2526 2.97077 11.2368 2.86384 11.2683 2.76949C11.3186 2.61852 11.3438 2.46127 11.3438 2.30402C11.3438 2.14991 11.3186 1.99266 11.2683 1.84484C11.2368 1.75048 11.2526 1.64355 11.3123 1.56178C11.3721 1.48001 11.4664 1.42969 11.5671 1.42969H15.2468C16.0394 1.42969 16.6841 2.07443 16.6841 2.86699C16.6841 3.04311 16.5426 3.18464 16.3696 3.18464ZM11.9602 2.55562H15.9922C15.8695 2.26628 15.5802 2.06185 15.2468 2.06185H11.9602C11.9696 2.14362 11.9759 2.22539 11.9759 2.30716C11.9759 2.39208 11.9696 2.47385 11.9602 2.55562Z",
          fill: "currentColor"
        }
      ),
      /* @__PURE__ */ jsx(
        "path",
        {
          d: "M16.3699 11.9783C14.7187 11.9783 13.3789 10.6354 13.3789 8.98736C13.3789 8.81438 13.5204 8.67285 13.6934 8.67285H19.0495C19.2224 8.67285 19.364 8.81438 19.364 8.98736C19.3608 10.6385 18.0179 11.9783 16.3699 11.9783ZM14.0268 9.30187C14.1809 10.4561 15.1716 11.3493 16.3699 11.3493C17.565 11.3493 18.5588 10.4561 18.7129 9.30187H14.0268Z",
          fill: "currentColor"
        }
      ),
      /* @__PURE__ */ jsx(
        "path",
        {
          d: "M19.0459 9.30206C18.9232 9.30206 18.81 9.23287 18.7565 9.11335L16.3663 3.65351L13.976 9.11335C13.9068 9.27061 13.7212 9.34609 13.5608 9.27375C13.4004 9.20456 13.3281 9.019 13.3973 8.8586L16.0738 2.74144C16.1241 2.62822 16.2373 2.55273 16.3631 2.55273C16.4889 2.55273 16.6021 2.62822 16.6525 2.74144L19.3289 8.8586C19.3981 9.019 19.3258 9.20456 19.1654 9.27375C19.1308 9.29262 19.0867 9.30206 19.0459 9.30206Z",
          fill: "currentColor"
        }
      ),
      /* @__PURE__ */ jsx(
        "path",
        {
          d: "M10.6354 14.7868H9.09429C8.92131 14.7868 8.77979 14.6453 8.77979 14.4723V3.92686C8.77979 3.81678 8.8364 3.71614 8.9276 3.65952C9.01881 3.60291 9.13518 3.59662 9.23268 3.6438C9.61952 3.83565 10.1007 3.83565 10.497 3.64694C10.5945 3.59977 10.7077 3.60606 10.7989 3.66581C10.8901 3.72243 10.9467 3.82307 10.9467 3.93315V14.4723C10.9499 14.6453 10.8084 14.7868 10.6354 14.7868ZM9.4088 14.1578H10.3209V4.36717C10.0221 4.43321 9.70758 4.43321 9.4088 4.36717V14.1578Z",
          fill: "currentColor"
        }
      ),
      /* @__PURE__ */ jsx(
        "path",
        {
          d: "M13.4794 16.1328H6.25201C6.07903 16.1328 5.9375 15.9913 5.9375 15.8183V15.3937C5.9375 14.7112 6.49103 14.1577 7.17351 14.1577H12.5579C13.2404 14.1577 13.7939 14.7112 13.7939 15.3937V15.8183C13.7939 15.9913 13.6524 16.1328 13.4794 16.1328ZM6.56651 15.5038H13.1649V15.3937C13.1649 15.0572 12.8913 14.7867 12.5579 14.7867H7.17351C6.83699 14.7867 6.56651 15.0604 6.56651 15.3937V15.5038Z",
          fill: "currentColor"
        }
      ),
      /* @__PURE__ */ jsx(
        "path",
        {
          d: "M9.86571 4.41774C9.54806 4.41774 9.23355 4.3454 8.95679 4.20702C8.44414 3.96485 8.04157 3.51196 7.8623 2.96786C7.78997 2.75399 7.75537 2.53069 7.75537 2.30739C7.75537 2.08409 7.79311 1.86394 7.8623 1.64693C8.14536 0.782034 8.94735 0.200195 9.86257 0.200195C10.7778 0.200195 11.5829 0.782034 11.866 1.65007C11.9383 1.86394 11.9729 2.08409 11.9729 2.30739C11.9729 2.53384 11.9352 2.75399 11.866 2.971C11.6867 3.51825 11.2873 3.97114 10.7683 4.21331C10.4916 4.3454 10.1771 4.41774 9.86571 4.41774ZM9.86571 0.82921C9.22412 0.82921 8.65801 1.23807 8.46301 1.84507C8.41269 1.99918 8.38753 2.15329 8.38753 2.30739C8.38753 2.46465 8.41269 2.6219 8.46301 2.77286C8.58882 3.15656 8.86873 3.47107 9.23041 3.6409C9.62983 3.8359 10.1016 3.8359 10.501 3.64405C10.8658 3.47422 11.1458 3.15656 11.2716 2.77286C11.3219 2.6219 11.347 2.46465 11.347 2.30739C11.347 2.15329 11.3219 1.99603 11.2716 1.84821C11.0703 1.23807 10.5073 0.82921 9.86571 0.82921Z",
          fill: "currentColor"
        }
      ),
      /* @__PURE__ */ jsx(
        "path",
        {
          d: "M16.2342 17.7996H3.49664C3.32366 17.7996 3.18213 17.6581 3.18213 17.4851V16.8624C3.18213 16.1138 3.79227 15.5068 4.53765 15.5068H15.19C15.9385 15.5068 16.5455 16.1138 16.5455 16.8624V17.4851C16.5487 17.6581 16.4072 17.7996 16.2342 17.7996ZM3.81114 17.1706H15.9197V16.8624C15.9197 16.4598 15.5926 16.1359 15.1932 16.1359H4.53765C4.13509 16.1359 3.81114 16.4629 3.81114 16.8624V17.1706Z",
          fill: "currentColor"
        }
      )
    ]
  }
);
const RevenueIcon = ({ className }) => /* @__PURE__ */ jsx(
  "svg",
  {
    xmlns: "http://www.w3.org/2000/svg",
    width: "25",
    height: "25",
    viewBox: "0 0 25 25",
    fill: "none",
    className,
    children: /* @__PURE__ */ jsx(
      "path",
      {
        d: "M20.1171 7.8125C20.1171 7.9679 20.0554 8.11694 19.9455 8.22682C19.8356 8.3367 19.6866 8.39844 19.5312 8.39844H16.1806C16.2006 8.59311 16.2107 8.78868 16.2109 8.98438C16.2091 10.486 15.6118 11.9256 14.5499 12.9875C13.4881 14.0493 12.0485 14.6466 10.5468 14.6484H8.54683L16.0156 21.4414C16.1306 21.546 16.1993 21.6921 16.2066 21.8474C16.2139 22.0027 16.1593 22.1545 16.0546 22.2695C15.95 22.3845 15.804 22.4532 15.6487 22.4606C15.4934 22.4679 15.3415 22.4132 15.2265 22.3086L6.63277 14.4961C6.54497 14.4163 6.48346 14.3117 6.45639 14.1962C6.42931 14.0807 6.43793 13.9597 6.48111 13.8492C6.5243 13.7387 6.60001 13.6439 6.69823 13.5774C6.79646 13.5108 6.91257 13.4757 7.0312 13.4766H10.5468C11.7378 13.475 12.8795 13.0012 13.7216 12.1591C14.5637 11.317 15.0375 10.1753 15.039 8.98438C15.0384 8.78843 15.0253 8.59273 15 8.39844H7.0312C6.8758 8.39844 6.72677 8.3367 6.61688 8.22682C6.507 8.11694 6.44527 7.9679 6.44527 7.8125C6.44527 7.6571 6.507 7.50806 6.61688 7.39818C6.72677 7.2883 6.8758 7.22656 7.0312 7.22656H14.6806C14.3349 6.41616 13.7589 5.72506 13.0241 5.23898C12.2893 4.7529 11.4279 4.49324 10.5468 4.49219H7.0312C6.8758 4.49219 6.72677 4.43046 6.61688 4.32057C6.507 4.21069 6.44527 4.06165 6.44527 3.90625C6.44527 3.75085 6.507 3.60181 6.61688 3.49193C6.72677 3.38204 6.8758 3.32031 7.0312 3.32031H19.5312C19.6866 3.32031 19.8356 3.38204 19.9455 3.49193C20.0554 3.60181 20.1171 3.75085 20.1171 3.90625C20.1171 4.06165 20.0554 4.21069 19.9455 4.32057C19.8356 4.43046 19.6866 4.49219 19.5312 4.49219H13.9912C14.8976 5.18813 15.5735 6.14098 15.9306 7.22656H19.5312C19.6866 7.22656 19.8356 7.2883 19.9455 7.39818C20.0554 7.50806 20.1171 7.6571 20.1171 7.8125Z",
        fill: "#1E88E5"
      }
    )
  }
);
const TotalFileCountIcon = ({ className }) => /* @__PURE__ */ jsxs(
  "svg",
  {
    xmlns: "http://www.w3.org/2000/svg",
    width: "23",
    height: "22",
    viewBox: "0 0 23 22",
    fill: "none",
    className,
    children: [
      /* @__PURE__ */ jsx(
        "mask",
        {
          id: "mask0_22283_39897",
          style: { maskType: "luminance" },
          maskUnits: "userSpaceOnUse",
          x: "0",
          y: "0",
          width: "23",
          height: "22",
          children: /* @__PURE__ */ jsx("path", { d: "M0.0332031 0H22.0332V22H0.0332031V0Z", fill: "white" })
        }
      ),
      /* @__PURE__ */ jsxs("g", { mask: "url(#mask0_22283_39897)", children: [
        /* @__PURE__ */ jsx(
          "path",
          {
            d: "M11.0332 17.918C9.60935 17.918 8.45508 19.0722 8.45508 20.4961V21.3555H13.6113V20.4961C13.6113 19.0722 12.4571 17.918 11.0332 17.918Z",
            stroke: "currentColor",
            strokeWidth: "1.28906",
            strokeMiterlimit: "10",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        /* @__PURE__ */ jsx(
          "path",
          {
            d: "M12.5371 16.4141C12.5371 15.5835 11.8638 14.9102 11.0332 14.9102C10.2026 14.9102 9.5293 15.5835 9.5293 16.4141C9.5293 17.2446 10.2026 17.918 11.0332 17.918C11.8638 17.918 12.5371 17.2446 12.5371 16.4141Z",
            stroke: "currentColor",
            strokeWidth: "1.28906",
            strokeMiterlimit: "10",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        /* @__PURE__ */ jsx(
          "path",
          {
            d: "M18.8105 17.918C17.3867 17.918 16.2324 19.0722 16.2324 20.4961V21.3555H21.3887V20.4961C21.3887 19.0722 20.2344 17.918 18.8105 17.918Z",
            stroke: "currentColor",
            strokeWidth: "1.28906",
            strokeMiterlimit: "10",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        /* @__PURE__ */ jsx(
          "path",
          {
            d: "M20.3145 16.4141C20.3145 15.5835 19.6411 14.9102 18.8105 14.9102C17.98 14.9102 17.3066 15.5835 17.3066 16.4141C17.3066 17.2446 17.98 17.918 18.8105 17.918C19.6411 17.918 20.3145 17.2446 20.3145 16.4141Z",
            stroke: "currentColor",
            strokeWidth: "1.28906",
            strokeMiterlimit: "10",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        /* @__PURE__ */ jsx(
          "path",
          {
            d: "M3.25586 17.918C1.832 17.918 0.677734 19.0722 0.677734 20.4961V21.3555H5.83398V20.4961C5.83398 19.0722 4.67972 17.918 3.25586 17.918Z",
            stroke: "currentColor",
            strokeWidth: "1.28906",
            strokeMiterlimit: "10",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        /* @__PURE__ */ jsx(
          "path",
          {
            d: "M4.75977 16.4141C4.75977 15.5835 4.08645 14.9102 3.25586 14.9102C2.42527 14.9102 1.75195 15.5835 1.75195 16.4141C1.75195 17.2446 2.42527 17.918 3.25586 17.918C4.08645 17.918 4.75977 17.2446 4.75977 16.4141Z",
            stroke: "currentColor",
            strokeWidth: "1.28906",
            strokeMiterlimit: "10",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        /* @__PURE__ */ jsx(
          "path",
          {
            d: "M8.45508 0.64453H13.6113V9.66797H8.45508V0.64453Z",
            stroke: "currentColor",
            strokeWidth: "1.28906",
            strokeMiterlimit: "10",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        /* @__PURE__ */ jsx(
          "path",
          {
            d: "M8.45508 3.22266L5.87695 4.51172V9.66797H8.45508V3.22266Z",
            stroke: "currentColor",
            strokeWidth: "1.28906",
            strokeMiterlimit: "10",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        /* @__PURE__ */ jsx(
          "path",
          {
            d: "M13.6113 3.22266L16.1895 4.51172V9.66797H13.6113V3.22266Z",
            stroke: "currentColor",
            strokeWidth: "1.28906",
            strokeMiterlimit: "10",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        /* @__PURE__ */ jsx(
          "path",
          {
            d: "M11.0332 14.9102V9.66797",
            stroke: "currentColor",
            strokeWidth: "1.28906",
            strokeMiterlimit: "10",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        /* @__PURE__ */ jsx(
          "path",
          {
            d: "M11.0332 9.66797V8.37891",
            stroke: "currentColor",
            strokeWidth: "1.28906",
            strokeMiterlimit: "10",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        /* @__PURE__ */ jsx(
          "path",
          {
            d: "M3.25586 14.9102V13.6211C3.25586 12.9092 3.83302 12.332 4.54492 12.332H17.5215C18.2334 12.332 18.8105 12.9092 18.8105 13.6211V14.9102",
            stroke: "currentColor",
            strokeWidth: "1.28906",
            strokeMiterlimit: "10",
            strokeLinecap: "round",
            strokeLinejoin: "round"
          }
        ),
        /* @__PURE__ */ jsx(
          "path",
          {
            d: "M10.3887 3.22266C10.3887 2.8667 10.6772 2.57812 11.0332 2.57812C11.3892 2.57812 11.6777 2.8667 11.6777 3.22266C11.6777 3.57861 11.3892 3.86719 11.0332 3.86719C10.6772 3.86719 10.3887 3.57861 10.3887 3.22266Z",
            fill: "currentColor"
          }
        ),
        /* @__PURE__ */ jsx(
          "path",
          {
            d: "M10.3887 5.80078C10.3887 5.44483 10.6772 5.15625 11.0332 5.15625C11.3892 5.15625 11.6777 5.44483 11.6777 5.80078C11.6777 6.15673 11.3892 6.44531 11.0332 6.44531C10.6772 6.44531 10.3887 6.15673 10.3887 5.80078Z",
            fill: "currentColor"
          }
        )
      ] })
    ]
  }
);
const TotalFileCasesCountIcon = ({ className }) => /* @__PURE__ */ jsx(
  "svg",
  {
    xmlns: "http://www.w3.org/2000/svg",
    width: "22",
    height: "20",
    viewBox: "0 0 22 20",
    fill: "none",
    className,
    children: /* @__PURE__ */ jsx(
      "path",
      {
        d: "M20 3.33333H15.8333V2.5C15.8333 1.83696 15.5699 1.20107 15.1011 0.732233C14.6323 0.263392 13.9964 0 13.3333 0H8.33333C7.67029 0 7.03441 0.263392 6.56557 0.732233C6.09672 1.20107 5.83333 1.83696 5.83333 2.5V3.33333H1.66667C1.22464 3.33333 0.800716 3.50893 0.488155 3.82149C0.175595 4.13405 0 4.55797 0 5V18.3333C0 18.7754 0.175595 19.1993 0.488155 19.5118C0.800716 19.8244 1.22464 20 1.66667 20H20C20.442 20 20.8659 19.8244 21.1785 19.5118C21.4911 19.1993 21.6667 18.7754 21.6667 18.3333V5C21.6667 4.55797 21.4911 4.13405 21.1785 3.82149C20.8659 3.50893 20.442 3.33333 20 3.33333ZM7.5 2.5C7.5 2.27899 7.5878 2.06702 7.74408 1.91074C7.90036 1.75446 8.11232 1.66667 8.33333 1.66667H13.3333C13.5543 1.66667 13.7663 1.75446 13.9226 1.91074C14.0789 2.06702 14.1667 2.27899 14.1667 2.5V3.33333H7.5V2.5ZM20 5V9.33437C17.1873 10.8654 14.0357 11.6672 10.8333 11.6667C7.63105 11.6672 4.47961 10.8658 1.66667 9.33542V5H20ZM20 18.3333H1.66667V11.2125C4.52076 12.6085 7.65611 13.3339 10.8333 13.3333C14.0106 13.3334 17.1459 12.6076 20 11.2115V18.3333ZM8.33333 9.16667C8.33333 8.94565 8.42113 8.73369 8.57741 8.57741C8.73369 8.42113 8.94565 8.33333 9.16667 8.33333H12.5C12.721 8.33333 12.933 8.42113 13.0893 8.57741C13.2455 8.73369 13.3333 8.94565 13.3333 9.16667C13.3333 9.38768 13.2455 9.59964 13.0893 9.75592C12.933 9.9122 12.721 10 12.5 10H9.16667C8.94565 10 8.73369 9.9122 8.57741 9.75592C8.42113 9.59964 8.33333 9.38768 8.33333 9.16667Z",
        fill: "currentColor"
      }
    )
  }
);
const OrganizationStatistics = () => {
  const [location, setLocation] = useState(null);
  const [searchOrganization, setSearchOrganization] = useState(
    null
  );
  const navigate = useNavigate();
  const [dateRange, setDateRange] = useState({
    from: dayjs().subtract(1, "month").startOf("month").toDate(),
    to: dayjs().endOf("day").toDate()
  });
  const [searchOrganizationString, setSearchOrganizationString] = useState();
  const [searchLocation, setSearchLocation] = useState(null);
  const { isAdvocate, isManager, isAdmin } = useUserDetails();
  const { data, isLoading } = useOrganizationsStats({
    dateRange,
    organization: searchOrganization,
    location
  });
  const { data: locationData } = useLocations({
    search_string: searchLocation,
    enabled: !!isAdmin()
  });
  const allLocations = locationData?.records?.map((location2) => {
    return {
      id: location2.id,
      label: location2.name
    };
  });
  const { organizations, months } = data || { organizations: [], months: [] };
  const { data: organizationsData, isLoading: isLoadingOrganizations } = useOrganizationDropdown(searchOrganizationString, isManager() || isAdmin());
  const allOrganizations = organizationsData?.records?.map((org) => {
    return {
      id: org.id,
      label: org.organisation_name
    };
  });
  const { data: advocatesOrgData } = useAdvocateOrgDropdown(isAdvocate());
  const allAdvocatesOrg = advocatesOrgData?.map((advocate) => {
    return {
      id: advocate.id,
      label: advocate.organisation_name
    };
  });
  const { data: advocatesLocData } = useAdvocateLocationDropdown(isAdvocate());
  const allAdvocatesLoc = advocatesLocData?.map((advLoc) => {
    return {
      id: advLoc.id,
      label: advLoc.name
    };
  });
  const columns = React__default.useMemo(() => {
    const cols = [
      {
        accessorKey: "name",
        header: () => "Organization Name",
        cell: (info) => /* @__PURE__ */ jsxs("div", { className: " ", children: [
          /* @__PURE__ */ jsxs(Tooltip, { children: [
            /* @__PURE__ */ jsx(TooltipTrigger, { className: "max-w-full", children: /* @__PURE__ */ jsx("div", { className: "max-w-full whitespace-nowrap truncate text-left", children: info.row.original.name }) }),
            /* @__PURE__ */ jsx(
              TooltipContent,
              {
                side: "right",
                className: "bg-white w-fit z-50! py-1 text-smd border-gray-300",
                children: info.row.original.name
              }
            )
          ] }),
          isAdmin() && info.row.original.location.length > 0 && /* @__PURE__ */ jsxs("div", { className: "text-xs text-amber-800 flex gap-1 items-center mt-1 text-[10px]", children: [
            /* @__PURE__ */ jsx(MapPin, { className: "w-3 h-3" }),
            " ",
            info.row.original.location
          ] })
        ] }),
        size: 160
      }
    ];
    months.forEach((month) => {
      ["lop", "eop", "litigation"].forEach((type) => {
        cols.push({
          id: `${month}-${type}-cases`,
          header: () => "Cases",
          meta: { parent: `${month}-${type}` },
          cell: (info) => info.row.original.data.find((d) => d.month === month)[type].cases,
          size: 60
        });
        if (!isAdvocate()) {
          cols.push({
            id: `${month}-${type}-revenue`,
            header: () => "Revenue",
            meta: { parent: `${month}-${type}` },
            cell: (info) => INRFormatter.format(
              info.row.original.data.find((d) => d.month === month)[type].revenue
            ),
            size: 100
          });
        }
      });
    });
    ["lop", "eop", "litigation"].forEach((type) => {
      cols.push({
        id: `total-${type}-cases`,
        header: () => "Cases",
        meta: { parent: `total-${type}` },
        cell: (info) => info.row.original.total[type].cases,
        size: 60
      });
      if (!isAdvocate()) {
        cols.push({
          id: `total-${type}-revenue`,
          header: () => "Revenue",
          meta: { parent: `total-${type}` },
          cell: (info) => INRFormatter.format(info.row.original.total[type].revenue),
          size: 100
        });
      }
    });
    return cols;
  }, [months, isAdvocate]);
  const table = useReactTable({
    data: organizations,
    columns,
    getCoreRowModel: getCoreRowModel()
  });
  useEffect(() => {
    if (!dateRange?.from || !dateRange?.to || !isAdmin()) return;
    const fromDate = dayjs(dateRange.from);
    const toDate = dayjs(dateRange.to);
    const monthsDiff = toDate.diff(fromDate, "month", true);
    if (monthsDiff > 3) {
      navigate({
        to: `/revenue-statistics?from=${fromDate.format("YYYY-MM-DD")}&to=${toDate.format("YYYY-MM-DD")}`
      });
    }
  }, [dateRange, navigate]);
  if (isLoading) {
    return /* @__PURE__ */ jsxs("div", { className: "mt-2 p-4 bg-white", children: [
      /* @__PURE__ */ jsx("div", { className: "flex items-center justify-between" }),
      /* @__PURE__ */ jsx("div", { className: "mt-3 h-[calc(100vh-327px)] relative flex items-center justify-center", children: /* @__PURE__ */ jsx(LoadingComponent, { loading: isLoading }) })
    ] });
  }
  if (organizations?.length === 0)
    return /* @__PURE__ */ jsxs("div", { className: "mt-2 p-4 bg-white", children: [
      /* @__PURE__ */ jsxs("div", { className: "flex items-center justify-between", children: [
        /* @__PURE__ */ jsx("div", { children: "Organization Statistics" }),
        /* @__PURE__ */ jsxs("div", { className: "flex gap-2", children: [
          /* @__PURE__ */ jsx("div", { className: "relative", children: isAdvocate() ? /* @__PURE__ */ jsx(
            ComboBox,
            {
              items: allAdvocatesOrg,
              placeholder: "Select Organization",
              value: allAdvocatesOrg?.find(
                (o) => o.id === searchOrganization
              ),
              onChange: (item) => setSearchOrganization(item?.id),
              className: "h-8 text-smd font-light border-gray-300",
              contentClassName: "bg-white rounded",
              isLoading: isLoadingOrganizations,
              onSearchChange: setSearchOrganizationString
            }
          ) : /* @__PURE__ */ jsx(
            ComboBox,
            {
              items: allOrganizations,
              placeholder: "Select Organization",
              value: allOrganizations?.find(
                (o) => o.id === searchOrganization
              ),
              onChange: (item) => setSearchOrganization(item?.id),
              className: "h-8 text-smd font-light border-gray-300",
              contentClassName: "bg-white rounded",
              isLoading: isLoadingOrganizations,
              onSearchChange: setSearchOrganizationString,
              enableApiSearch: true
            }
          ) }),
          isAdvocate() && /* @__PURE__ */ jsx(
            ComboBox,
            {
              items: allAdvocatesLoc,
              placeholder: "Select Location",
              value: allAdvocatesLoc?.find((l) => l.id === location),
              onChange: (item) => setLocation(item?.id),
              defaultIcon: MapPin,
              className: "h-8 text-smd font-light border-gray-300",
              contentClassName: "bg-white rounded",
              isLoading,
              enableApiSearch: true,
              onSearchChange: setSearchLocation
            }
          ),
          isAdmin() && /* @__PURE__ */ jsx(
            ComboBox,
            {
              items: allLocations,
              placeholder: "Select Location",
              value: allLocations?.find((l) => l.id === location),
              onChange: (item) => setLocation(item?.id),
              defaultIcon: MapPin,
              className: "h-8 text-smd font-light border-gray-300",
              contentClassName: "bg-white rounded",
              isLoading,
              enableApiSearch: true,
              onSearchChange: setSearchLocation
            }
          ),
          /* @__PURE__ */ jsx(
            CustomDateRangePicker,
            {
              date: dateRange,
              setDate: setDateRange,
              mode: "month-year",
              align: "end"
            }
          )
        ] })
      ] }),
      /* @__PURE__ */ jsx("div", { className: "mt-3 h-[calc(100vh-327px)]  flex flex-col items-center justify-center", children: /* @__PURE__ */ jsx(NoDataDisplay, { height: "h-[calc(100vh-327px)]", title: "Data" }) })
    ] });
  return /* @__PURE__ */ jsxs("div", { className: "mt-2 p-4 bg-white", children: [
    /* @__PURE__ */ jsxs("div", { className: "flex items-center justify-between", children: [
      /* @__PURE__ */ jsx("div", { children: "Organization Statistics" }),
      /* @__PURE__ */ jsxs("div", { className: "flex gap-2", children: [
        /* @__PURE__ */ jsx("div", { className: "relative", children: isAdvocate() ? /* @__PURE__ */ jsx(
          ComboBox,
          {
            items: allAdvocatesOrg,
            placeholder: "Select Organization",
            value: allAdvocatesOrg?.find(
              (o) => o.id === searchOrganization
            ),
            onChange: (item) => setSearchOrganization(item?.id),
            className: "h-8 text-smd font-light border-gray-300",
            contentClassName: "bg-white rounded",
            isLoading: isLoadingOrganizations,
            onSearchChange: setSearchOrganizationString
          }
        ) : /* @__PURE__ */ jsx(
          ComboBox,
          {
            items: allOrganizations,
            placeholder: "Select Organization",
            value: allOrganizations?.find(
              (o) => o.id === searchOrganization
            ),
            onChange: (item) => setSearchOrganization(item?.id),
            className: "h-8 text-smd font-light border-gray-300",
            contentClassName: "bg-white rounded",
            isLoading: isLoadingOrganizations,
            onSearchChange: setSearchOrganizationString,
            enableApiSearch: true
          }
        ) }),
        isAdvocate() && /* @__PURE__ */ jsx(
          ComboBox,
          {
            items: allAdvocatesLoc,
            placeholder: "Select Location",
            value: allAdvocatesLoc?.find((l) => l.id === location),
            onChange: (item) => setLocation(item?.id),
            defaultIcon: MapPin,
            className: "h-8 text-smd font-light border-gray-300",
            contentClassName: "bg-white rounded",
            isLoading,
            enableApiSearch: true,
            onSearchChange: setSearchLocation
          }
        ),
        isAdmin() && /* @__PURE__ */ jsx(
          ComboBox,
          {
            items: allLocations,
            placeholder: "Select Location",
            value: allLocations?.find((l) => l.id === location),
            onChange: (item) => setLocation(item?.id),
            defaultIcon: MapPin,
            className: "h-8 text-smd font-light border-gray-300",
            contentClassName: "bg-white rounded",
            isLoading,
            enableApiSearch: true,
            onSearchChange: setSearchLocation
          }
        ),
        /* @__PURE__ */ jsx(
          CustomDateRangePicker,
          {
            date: dateRange,
            setDate: setDateRange,
            mode: "month-year",
            align: "end"
          }
        )
      ] })
    ] }),
    /* @__PURE__ */ jsx(
      "div",
      {
        className: `mt-3 ${isAdvocate() ? "h-[calc(100vh-250px)]" : "h-[calc(100vh-320px)]"} relative`,
        children: /* @__PURE__ */ jsx(
          "div",
          {
            className: `overflow-auto  ${isAdvocate() ? "h-[calc(100vh-238px)]" : "h-[calc(100vh-308px)]"}  border-gray-300`,
            children: /* @__PURE__ */ jsxs("table", { className: "border-separate border  border-spacing-0 table-fixed text-sm min-w-full ", children: [
              /* @__PURE__ */ jsxs("thead", { className: "bg-gray-100 sticky top-0 z-30", children: [
                /* @__PURE__ */ jsxs("tr", { children: [
                  /* @__PURE__ */ jsx(
                    "th",
                    {
                      rowSpan: 3,
                      className: "font-normal sticky left-0 z-20 text-sm p-2 border bg-gray-200 border-gray-300",
                      children: "Organization Name"
                    }
                  ),
                  months.map((month) => /* @__PURE__ */ jsx(
                    "th",
                    {
                      colSpan: isAdvocate() ? 3 : 6,
                      className: "font-normal text-xs capitalize p-2 border border-gray-300",
                      children: month
                    },
                    month
                  )),
                  /* @__PURE__ */ jsx(
                    "th",
                    {
                      colSpan: isAdvocate() ? 3 : 6,
                      className: "font-normal text-xs p-2 border border-gray-300",
                      children: "Total"
                    }
                  )
                ] }),
                /* @__PURE__ */ jsxs("tr", { children: [
                  months.map((month) => /* @__PURE__ */ jsxs(React__default.Fragment, { children: [
                    /* @__PURE__ */ jsx(
                      "th",
                      {
                        colSpan: isAdvocate() ? 1 : 2,
                        className: "font-normal text-xs p-2 border border-gray-300",
                        children: "Legal Opinion"
                      }
                    ),
                    /* @__PURE__ */ jsx(
                      "th",
                      {
                        colSpan: isAdvocate() ? 1 : 2,
                        className: "font-normal text-xs p-2 border border-gray-300",
                        children: "EP Valuation"
                      }
                    ),
                    /* @__PURE__ */ jsx(
                      "th",
                      {
                        colSpan: isAdvocate() ? 1 : 2,
                        className: "font-normal text-xs p-2 border border-gray-300",
                        children: "Litigation"
                      }
                    )
                  ] }, month)),
                  ["lop", "eop", "litigation"].map((type) => /* @__PURE__ */ jsx(
                    "th",
                    {
                      colSpan: isAdvocate() ? 1 : 2,
                      className: "font-normal text-xs p-2 border border-gray-300",
                      children: type === "lop" ? "Legal Opinion" : type === "eop" ? "EP Valuation" : "Litigation"
                    },
                    type
                  ))
                ] }),
                /* @__PURE__ */ jsxs("tr", { children: [
                  months.map((m) => /* @__PURE__ */ jsxs(React__default.Fragment, { children: [
                    /* @__PURE__ */ jsx(
                      "th",
                      {
                        className: "font-normal border-r border-gray-300 text-xs p-2",
                        style: { width: "60px", minWidth: "60px" },
                        children: "Cases"
                      }
                    ),
                    !isAdvocate() && /* @__PURE__ */ jsx(
                      "th",
                      {
                        className: "font-normal border-r border-gray-300 text-xs p-2",
                        style: { width: "60px", minWidth: "60px" },
                        children: "Revenue"
                      }
                    ),
                    /* @__PURE__ */ jsx(
                      "th",
                      {
                        className: "font-normal border-r border-gray-300 text-xs p-2",
                        style: { width: "60px", minWidth: "60px" },
                        children: "Cases"
                      }
                    ),
                    !isAdvocate() && /* @__PURE__ */ jsx(
                      "th",
                      {
                        className: "font-normal border-r border-gray-300 text-xs p-2",
                        style: { width: "60px", minWidth: "60px" },
                        children: "Revenue"
                      }
                    ),
                    /* @__PURE__ */ jsx(
                      "th",
                      {
                        className: "font-normal border-r border-gray-300 text-xs p-2",
                        style: { width: "60px", minWidth: "60px" },
                        children: "Cases"
                      }
                    ),
                    !isAdvocate() && /* @__PURE__ */ jsx(
                      "th",
                      {
                        className: "font-normal border-r border-gray-300 text-xs p-2",
                        style: { width: "60px", minWidth: "60px" },
                        children: "Revenue"
                      }
                    )
                  ] }, m)),
                  ["lop", "eop", "litigation"].map((type) => /* @__PURE__ */ jsxs(React__default.Fragment, { children: [
                    /* @__PURE__ */ jsx("th", { className: "font-normal text-xs p-2 border-r border-gray-300 bg-gray-100", children: "Cases" }),
                    !isAdvocate() && /* @__PURE__ */ jsx("th", { className: "font-normal text-xs p-2 bg-gray-100", children: "Revenue" })
                  ] }, type))
                ] })
              ] }),
              /* @__PURE__ */ jsxs("tbody", { children: [
                table.getRowModel().rows.map((row) => /* @__PURE__ */ jsx("tr", { className: "h-auto", children: row.getVisibleCells().map((cell, idx) => /* @__PURE__ */ jsx(
                  "td",
                  {
                    className: `border-r  border-gray-300 p-2 text-xs text-center ${idx === 0 && "sticky left-0 bg-white z-10 text-left"} `,
                    style: {
                      minWidth: `${cell.column.columnDef.size}px`,
                      maxWidth: `${cell.column.columnDef.size}px`,
                      width: `${cell.column.columnDef.size}px`
                    },
                    children: flexRender(
                      cell.column.columnDef.cell,
                      cell.getContext()
                    )
                  },
                  cell.id
                )) }, row.id)),
                organizations.length === 0 && /* @__PURE__ */ jsx("tr", { children: /* @__PURE__ */ jsx(
                  "td",
                  {
                    colSpan: months.length * 3 + 3,
                    className: "text-center p-4",
                    children: "No data available"
                  }
                ) })
              ] })
            ] })
          }
        )
      }
    )
  ] });
};
const YearDropdown = ({
  startYear = 2e3,
  endYear = (/* @__PURE__ */ new Date()).getFullYear(),
  onChange
}) => {
  const years = [];
  for (let year = endYear; year >= startYear; year--) {
    years.push(year);
  }
  const handleChange = (value) => {
    const selectedYear = Number(value);
    if (!selectedYear) return;
    const today = /* @__PURE__ */ new Date();
    const from = new Date(selectedYear, 0, 1);
    let to;
    if (selectedYear === today.getFullYear()) {
      to = today;
    } else {
      to = new Date(selectedYear, 11, 31);
    }
    const selectedRange = { from, to };
    if (onChange) {
      onChange(selectedRange);
    }
  };
  return /* @__PURE__ */ jsxs(Select, { defaultValue: String(endYear), onValueChange: handleChange, children: [
    /* @__PURE__ */ jsx(SelectTrigger, { className: "w-[100px] h-8", children: /* @__PURE__ */ jsx(SelectValue, {}) }),
    /* @__PURE__ */ jsx(SelectContent, { className: "bg-white h-40", children: years.map((year) => /* @__PURE__ */ jsx(SelectItem, { value: String(year), children: year }, year)) })
  ] });
};
function caseAnalyticsIcon({
  className
}) {
  return /* @__PURE__ */ jsx(
    "svg",
    {
      xmlns: "http://www.w3.org/2000/svg",
      width: "20",
      height: "21",
      viewBox: "0 0 20 21",
      fill: "none",
      className,
      children: /* @__PURE__ */ jsx(
        "path",
        {
          d: "M18.25 2.93732H10.5625V1.24982C10.5625 1.10063 10.5032 0.957558 10.3977 0.852069C10.2923 0.74658 10.1492 0.687317 10 0.687317C9.85082 0.687317 9.70774 0.74658 9.60225 0.852069C9.49676 0.957558 9.4375 1.10063 9.4375 1.24982V2.93732H1.75C1.4019 2.93732 1.06806 3.0756 0.821922 3.32174C0.575781 3.56788 0.4375 3.90172 0.4375 4.24982V15.4998C0.4375 15.8479 0.575781 16.1818 0.821922 16.4279C1.06806 16.674 1.4019 16.8123 1.75 16.8123H5.83L3.56031 19.6483C3.51414 19.706 3.4798 19.7723 3.45924 19.8433C3.43869 19.9143 3.43232 19.9887 3.4405 20.0621C3.45703 20.2105 3.53183 20.3463 3.64844 20.4395C3.76505 20.5327 3.91393 20.5758 4.06231 20.5593C4.2107 20.5428 4.34645 20.468 4.43969 20.3514L7.27 16.8123H12.73L15.5603 20.3514C15.6065 20.4091 15.6636 20.4572 15.7283 20.4929C15.7931 20.5286 15.8642 20.5511 15.9377 20.5593C16.0112 20.5675 16.0855 20.5611 16.1565 20.5406C16.2276 20.52 16.2938 20.4857 16.3516 20.4395C16.4093 20.3933 16.4574 20.3363 16.4931 20.2715C16.5287 20.2067 16.5513 20.1356 16.5595 20.0621C16.5677 19.9887 16.5613 19.9143 16.5408 19.8433C16.5202 19.7723 16.4859 19.706 16.4397 19.6483L14.17 16.8123H18.25C18.5981 16.8123 18.9319 16.674 19.1781 16.4279C19.4242 16.1818 19.5625 15.8479 19.5625 15.4998V4.24982C19.5625 3.90172 19.4242 3.56788 19.1781 3.32174C18.9319 3.0756 18.5981 2.93732 18.25 2.93732ZM18.4375 15.4998C18.4375 15.5495 18.4177 15.5972 18.3826 15.6324C18.3474 15.6676 18.2997 15.6873 18.25 15.6873H1.75C1.70027 15.6873 1.65258 15.6676 1.61742 15.6324C1.58225 15.5972 1.5625 15.5495 1.5625 15.4998V4.24982C1.5625 4.20009 1.58225 4.1524 1.61742 4.11723C1.65258 4.08207 1.70027 4.06232 1.75 4.06232H18.25C18.2997 4.06232 18.3474 4.08207 18.3826 4.11723C18.4177 4.1524 18.4375 4.20009 18.4375 4.24982V15.4998ZM7.5625 10.2498V12.4998C7.5625 12.649 7.50324 12.7921 7.39775 12.8976C7.29226 13.0031 7.14918 13.0623 7 13.0623C6.85082 13.0623 6.70774 13.0031 6.60225 12.8976C6.49676 12.7921 6.4375 12.649 6.4375 12.4998V10.2498C6.4375 10.1006 6.49676 9.95756 6.60225 9.85207C6.70774 9.74658 6.85082 9.68732 7 9.68732C7.14918 9.68732 7.29226 9.74658 7.39775 9.85207C7.50324 9.95756 7.5625 10.1006 7.5625 10.2498ZM10.5625 8.74982V12.4998C10.5625 12.649 10.5032 12.7921 10.3977 12.8976C10.2923 13.0031 10.1492 13.0623 10 13.0623C9.85082 13.0623 9.70774 13.0031 9.60225 12.8976C9.49676 12.7921 9.4375 12.649 9.4375 12.4998V8.74982C9.4375 8.60063 9.49676 8.45756 9.60225 8.35207C9.70774 8.24658 9.85082 8.18732 10 8.18732C10.1492 8.18732 10.2923 8.24658 10.3977 8.35207C10.5032 8.45756 10.5625 8.60063 10.5625 8.74982ZM13.5625 7.24982V12.4998C13.5625 12.649 13.5032 12.7921 13.3977 12.8976C13.2923 13.0031 13.1492 13.0623 13 13.0623C12.8508 13.0623 12.7077 13.0031 12.6023 12.8976C12.4968 12.7921 12.4375 12.649 12.4375 12.4998V7.24982C12.4375 7.10063 12.4968 6.95756 12.6023 6.85207C12.7077 6.74658 12.8508 6.68732 13 6.68732C13.1492 6.68732 13.2923 6.74658 13.3977 6.85207C13.5032 6.95756 13.5625 7.10063 13.5625 7.24982Z",
          fill: "black"
        }
      )
    }
  );
}
const OrganizationTable = () => {
  const userDetails = useStore(userStore, (state) => state["user"]);
  const [dateRange, setDateRange] = useState({
    from: dayjs().startOf("year").toDate(),
    to: dayjs().endOf("day").toDate()
  });
  const { data: orgData, isLoading } = useQuery({
    queryKey: ["orgData", dateRange],
    queryFn: async () => {
      let queryParams = {};
      if (dateRange) {
        queryParams = {
          from_date: dayjs(dateRange?.from).format("YYYY-MM-DD"),
          to_date: dayjs(dateRange?.to).format("YYYY-MM-DD")
        };
      }
      const response = await getOrganizationAnalytics(
        userDetails?.id,
        queryParams
      );
      return response?.data?.data;
    },
    refetchOnWindowFocus: false
  });
  const serviceTypes = useMemo(() => {
    if (!orgData) return [];
    const types = orgData.flatMap(
      (row) => row.service_types.map((s) => s.service_type)
    );
    if (!types.includes("E.P Valuation")) {
      types.push("E.P Valuation");
    }
    return Array.from(new Set(types));
  }, [orgData]);
  const columns = useMemo(() => {
    const baseSize = 120;
    return [
      {
        accessorKey: "month",
        header: "Month",
        size: 80,
        minSize: 80,
        maxSize: 80
      },
      ...serviceTypes.map((type) => ({
        id: type.toLowerCase().replace(/\s+/g, "_"),
        header: type,
        accessorFn: (row) => row.service_types.find((s) => s.service_type === type)?.cases_count ?? 0,
        size: baseSize,
        minSize: 80,
        maxSize: 150
      })),
      {
        accessorKey: "total_cases",
        header: "Total Cases",
        size: 100,
        minSize: 80,
        maxSize: 120
      }
    ];
  }, [serviceTypes]);
  return /* @__PURE__ */ jsxs("div", { className: "bg-white h-[calc(100vh-390px)] mt-2 p-2", children: [
    /* @__PURE__ */ jsxs("div", { className: "flex justify-between items-center", children: [
      /* @__PURE__ */ jsxs("div", { className: "flex items-center gap-2 mb-2", children: [
        /* @__PURE__ */ jsx("div", { className: "p-2 bg-gray-100", children: /* @__PURE__ */ jsx(caseAnalyticsIcon, { className: "h-4 w-4" }) }),
        /* @__PURE__ */ jsx("div", { className: "text-sm", children: "Cases Analytics" })
      ] }),
      /* @__PURE__ */ jsx("div", { children: /* @__PURE__ */ jsx(YearDropdown, { onChange: setDateRange }) })
    ] }),
    isLoading ? /* @__PURE__ */ jsx("div", { className: "h-[calc(100vh-420px)] relative", children: /* @__PURE__ */ jsx(LoadingComponent, { loading: isLoading }) }) : /* @__PURE__ */ jsx(
      TanStackTable,
      {
        columns,
        data: orgData ?? [],
        paginationDetails: void 0,
        noDataLabel: "data",
        heightClass: "h-[calc(100vh-420px)]",
        removeSortingForColumnIds: [
          "total_cases",
          "month",
          "legal_opinion",
          "litigation",
          "e.p_valuation"
        ]
      }
    )
  ] });
};
const TotalOrganizationIcon = ({ className }) => /* @__PURE__ */ jsx(TotalFileCountIcon, { className });
const TotalCasesIcon = ({ className }) => /* @__PURE__ */ jsx(TotalFileCasesCountIcon, { className });
const StatisticsSection = () => {
  const navigate = useNavigate();
  const { isAdvocate, isManager, isUser, isAdmin } = useUserDetails();
  const userDetails = useStore(userStore, (state) => state["user"]);
  const {
    data: dashboardStats,
    isLoading: statsLoading,
    error: statsError
  } = useQuery({
    queryKey: ["dashboardStats"],
    queryFn: async () => {
      const response = await getCasesCountAPI();
      return response?.data?.data;
    },
    refetchOnWindowFocus: false,
    refetchOnMount: false
  });
  const { data: locationsCount, isLoading: locationsLoading } = useQuery({
    queryKey: ["locationsCount"],
    queryFn: async () => {
      const response = await getLocationStatsCountAPI();
      return response?.data?.data;
    },
    refetchOnWindowFocus: false,
    refetchOnMount: false,
    enabled: isManager() || isAdmin()
  });
  const { data: servicesCount, isLoading: servicesCountLoading } = useQuery({
    queryKey: ["servicesCount"],
    queryFn: async () => {
      const response = await getServicesCountApi();
      return response?.data?.data;
    },
    enabled: isManager() || isAdmin(),
    refetchOnWindowFocus: false,
    refetchOnMount: false
  });
  const { data: advocateServiceCount } = useQuery({
    queryKey: ["AdvocateServiceCount"],
    queryFn: async () => {
      const response = await getAdvocateServicesCountAPI(userDetails?.id);
      return response?.data?.data;
    },
    enabled: isAdvocate(),
    refetchOnWindowFocus: false,
    refetchOnMount: false
  });
  const { data: orgCasesCount } = useQuery({
    queryKey: ["OrgCasesCount"],
    queryFn: async () => {
      const response = await getOrgServiceCasesCount();
      return response?.data?.data;
    },
    enabled: isUser()
  });
  const { data: organizationsCount } = useQuery({
    queryKey: ["organizationsCount"],
    queryFn: async () => {
      const response = await getOrganizationsCountAPI();
      return response?.data?.data;
    },
    refetchOnWindowFocus: false,
    refetchOnMount: false,
    enabled: isManager() || isAdmin() || isAdvocate()
  });
  const { data: advocatesCount } = useQuery({
    queryKey: ["advocatesCount"],
    queryFn: async () => {
      const response = await getAdvocatesCountAPI();
      return response?.data?.data;
    },
    refetchOnWindowFocus: false,
    refetchOnMount: false,
    enabled: isManager() || isAdmin()
  });
  const { data: managersCount } = useQuery({
    queryKey: ["managersCount"],
    queryFn: async () => {
      const response = await getManagersCountAPI();
      return response?.data?.data;
    },
    refetchOnWindowFocus: false,
    refetchOnMount: false,
    enabled: isManager() || isAdmin()
  });
  const handleRoute = (path) => {
    navigate({ to: `/${path}` });
  };
  const stats1 = [
    {
      name: "Locations",
      icon: MapPin,
      count: locationsCount?.count || 0,
      color: "bg-green-100 text-green-600",
      userType: ["ADMIN"],
      path: "locations"
    },
    {
      name: "Managers",
      icon: ManagerIcon,
      count: managersCount?.count || 0,
      color: "bg-blue-100 text-blue-600",
      userType: ["ADMIN"],
      path: "managers"
    },
    {
      name: "Organizations",
      icon: TotalOrganizationIcon,
      count: organizationsCount?.count || 0,
      color: "bg-violet-100 text-violet-600",
      userType: ["ADMIN", "MANAGER", "ADVOCATE"],
      path: "organizations"
    },
    {
      name: "Advocates",
      icon: AdvocateIcon,
      count: advocatesCount?.count || 0,
      userType: ["ADMIN", "MANAGER"],
      path: "advocates"
    },
    {
      name: "Total Cases",
      icon: TotalCasesIcon,
      count: dashboardStats?.count || 0,
      color: "bg-amber-100 text-amber-500",
      userType: ["ADMIN", "MANAGER", "ADVOCATE"]
    }
  ];
  const legalOpinionCount = isAdvocate() ? advocateServiceCount?.find((s) => s.service_type === "Legal opinion")?.cases_count : servicesCount?.find((s) => s.service_type === "Legal opinion")?.cases_count;
  const litigationCount = isAdvocate() ? advocateServiceCount?.find((s) => s.service_type === "Litigation")?.cases_count : servicesCount?.find((s) => s.service_type === "Litigation")?.cases_count;
  const eopCount = isAdvocate() ? advocateServiceCount?.find(
    (s) => s.service_type === "Engineer property valuation"
  )?.cases_count : servicesCount?.find(
    (s) => s.service_type === "Engineer property valuation"
  )?.cases_count;
  const getVisibleStats1 = () => {
    const currentUserTypes = [];
    if (isAdmin()) currentUserTypes.push("ADMIN");
    if (isManager()) currentUserTypes.push("MANAGER");
    if (isAdvocate()) currentUserTypes.push("ADVOCATE");
    if (isUser()) currentUserTypes.push("USER");
    return stats1.filter(
      (stat) => stat.userType.some((type) => currentUserTypes.includes(type))
    );
  };
  const stats2 = [
    {
      name: "Legal Opinion",
      cases: legalOpinionCount,
      revenue: servicesCount?.find(
        (s) => s.service_type === "Legal opinion"
      )?.revenue,
      color: "bg-green-100 text-green-600",
      icon: LegalCasesIcon,
      path: "legal-opinion?page=1&page_size=15&service_type=Legal+opinion&view=grid"
    },
    {
      name: isAdvocate() ? "EP Valuation" : "Engineer Property Valuation",
      cases: eopCount,
      revenue: servicesCount?.find(
        (s) => s.service_type === "Engineer property valuation"
      ),
      color: "bg-blue-100 text-blue-600",
      icon: EngineerValuationIcon,
      path: "engineer-property-valuation"
    },
    {
      name: "Litigation",
      cases: litigationCount,
      revenue: servicesCount?.find((s) => s.service_type === "Litigation")?.revenue,
      color: "bg-violet-100 text-violet-600",
      icon: Litigation,
      path: "litigations?page=1&page_size=15&view=grid"
    }
  ];
  const allServices = [
    {
      title: "Legal Opinion",
      path: "legal-opinion?page=1&page_size=15&service_type=Legal+opinion&view=grid"
    },
    {
      title: "Engineer Property Valuation",
      path: "engineer-property-valuation"
    },
    {
      title: "Litigation",
      path: "litigations?page=1&page_size=15&view=grid"
    }
  ];
  const customerStats = allServices.map((service) => {
    const serviceData = orgCasesCount?.find(
      (s) => s.service_type.toLowerCase() === service.title.toLowerCase()
    );
    if (serviceData) {
      const statusMap = {};
      serviceData.statuses.forEach((s) => {
        if (s.status === "TO_START") statusMap["to_start"] = s.count;
        if (s.status === "IN_PROGRESS") statusMap["progress"] = s.count;
        if (s.status === "COMPLETED") statusMap["completed"] = s.count;
      });
      return {
        title: service.title,
        path: service.path,
        cases: serviceData.statuses.reduce((a, b) => a + b.count, 0),
        ...statusMap
      };
    } else {
      return {
        title: service.title,
        path: service.path,
        cases: 0,
        to_start: 0,
        progress: 0,
        completed: 0
      };
    }
  });
  const statusConfig = [
    { key: "cases", label: "Cases" },
    { key: "to_start", label: "To Start" },
    { key: "in_progress", label: "In Progress" },
    { key: "completed", label: "Completed" }
  ];
  return /* @__PURE__ */ jsxs("div", { className: "col-span-7", children: [
    (isAdmin() || isManager()) && /* @__PURE__ */ jsxs("div", { className: "", children: [
      /* @__PURE__ */ jsx("div", { className: `grid grid-cols-${getVisibleStats1().length} gap-2`, children: getVisibleStats1().map((stat, index) => /* @__PURE__ */ jsxs(
        "div",
        {
          onClick: () => {
            if (stat.path) {
              handleRoute(stat.path);
            }
          },
          className: `bg-white   border border-gray-200 px-2 py-1 rounded flex items-center justify-between gap-2 ${stat.path ? "cursor-pointer" : ""}`,
          children: [
            /* @__PURE__ */ jsxs("div", { className: " items-center gap-3", children: [
              /* @__PURE__ */ jsx("div", { className: "font-medium text-sm", children: /* @__PURE__ */ jsx(OverflowContentTooltip, { text: stat.name }) }),
              /* @__PURE__ */ jsx(OverflowContentTooltip, { text: stat.count })
            ] }),
            /* @__PURE__ */ jsx("div", { className: `${stat.color} p-2  `, children: /* @__PURE__ */ jsx(stat.icon, { className: "h-5 w-5" }) })
          ]
        },
        index
      )) }),
      /* @__PURE__ */ jsx("div", { className: "mt-2 grid grid-cols-3 gap-2", children: stats2.map((stat, index) => /* @__PURE__ */ jsxs(
        "div",
        {
          onClick: () => handleRoute(stat.path ?? ""),
          className: "bg-white border cursor-pointer border-gray-200  p-2 rounded  gap-2",
          children: [
            /* @__PURE__ */ jsx("div", { className: " items-center gap-3", children: /* @__PURE__ */ jsx("div", { className: "font-medium text-smd", children: stat.name }) }),
            /* @__PURE__ */ jsxs("div", { className: "grid grid-cols-[43%_55%] gap-2 mt-2", children: [
              /* @__PURE__ */ jsxs("div", { className: "flex justify-between border p-1.5 rounded border-gray-300 items-center gap-3", children: [
                /* @__PURE__ */ jsxs("div", { className: "min-w-0", children: [
                  /* @__PURE__ */ jsx("div", { className: "font-light text-gray-500 text-xs truncate", children: "Cases" }),
                  /* @__PURE__ */ jsx(OverflowContentTooltip, { text: stat.cases || 0 })
                ] }),
                /* @__PURE__ */ jsx("div", { className: `${stat.color} p-1 shrink-0`, children: /* @__PURE__ */ jsx(stat.icon, { className: "h-5 w-5" }) })
              ] }),
              /* @__PURE__ */ jsxs("div", { className: "flex justify-between items-center rounded border gap-3 border-gray-300 p-2", children: [
                /* @__PURE__ */ jsxs("div", { className: "min-w-0", children: [
                  /* @__PURE__ */ jsx("div", { className: "font-light text-gray-500 text-xs", children: "Revenue" }),
                  /* @__PURE__ */ jsx(
                    OverflowContentTooltip,
                    {
                      text: INRFormatter.format(Number(stat.revenue || 0))
                    }
                  )
                ] }),
                /* @__PURE__ */ jsx("div", { className: "p-1 bg-blue-100 shrink-0 rounded", children: /* @__PURE__ */ jsx(RevenueIcon, { className: "h-5 w-5" }) })
              ] })
            ] })
          ]
        },
        index
      )) })
    ] }),
    isAdvocate() && /* @__PURE__ */ jsxs("div", { className: "grid grid-cols-5 gap-2", children: [
      /* @__PURE__ */ jsxs("div", { className: "col-span-2 p-2 border border-gray-300 bg-white ", children: [
        /* @__PURE__ */ jsx("h2", { className: "text-sm font-medium  ", children: "Total" }),
        /* @__PURE__ */ jsx("div", { className: "grid grid-cols-2 gap-2 ", children: getVisibleStats1().map((stat, index) => /* @__PURE__ */ jsxs(
          "div",
          {
            className: "bg-white  border border-gray-200 px-2 py-1 rounded flex items-center justify-between gap-2",
            children: [
              /* @__PURE__ */ jsxs("div", { className: " items-center gap-3", children: [
                /* @__PURE__ */ jsx("div", { className: "font-light text-sm", children: /* @__PURE__ */ jsx(OverflowContentTooltip, { text: stat.name }) }),
                /* @__PURE__ */ jsx(OverflowContentTooltip, { text: stat.count })
              ] }),
              /* @__PURE__ */ jsx("div", { className: `${stat.color} p-1  `, children: /* @__PURE__ */ jsx(stat.icon, { className: "h-5 w-5" }) })
            ]
          },
          index
        )) })
      ] }),
      /* @__PURE__ */ jsxs("div", { className: "col-span-3 p-2 border border-gray-300 bg-white", children: [
        /* @__PURE__ */ jsx("h2", { className: "text-sm font-medium ", children: "Cases" }),
        /* @__PURE__ */ jsx("div", { className: "grid grid-cols-3 gap-2", children: stats2.map((stat, index) => /* @__PURE__ */ jsx(
          "div",
          {
            className: "bg-white border cursor-pointer border-gray-200  px-2 py-1 rounded  gap-2",
            onClick: () => handleRoute(stat.path ?? ""),
            children: /* @__PURE__ */ jsxs("div", { className: "flex justify-between  rounded border-gray-300 items-center gap-3", children: [
              /* @__PURE__ */ jsxs("div", { children: [
                /* @__PURE__ */ jsx("div", { className: "font-light text-sm", children: /* @__PURE__ */ jsx(OverflowContentTooltip, { text: stat.name }) }),
                /* @__PURE__ */ jsx("div", { className: "text-md font-medium", children: /* @__PURE__ */ jsx(OverflowContentTooltip, { text: stat.cases }) })
              ] }),
              /* @__PURE__ */ jsx("div", { className: `${stat.color} p-1  `, children: /* @__PURE__ */ jsx(stat.icon, { className: "h-5 w-5" }) })
            ] })
          },
          index
        )) })
      ] })
    ] }),
    isUser() && /* @__PURE__ */ jsx("div", { className: "space-y-2", children: customerStats.map((item, index) => /* @__PURE__ */ jsxs(
      "div",
      {
        className: "p-1 px-2 rounded bg-white border border-gray-300",
        children: [
          /* @__PURE__ */ jsx("h2", { className: "text-sm font-medium text-gray-800", children: item.title }),
          /* @__PURE__ */ jsx("div", { className: "grid grid-cols-4 gap-2 my-1", children: statusConfig?.map((status) => /* @__PURE__ */ jsxs(
            "div",
            {
              className: "px-2 py-1 border border-gray-300 flex justify-between items-center \r\n                     cursor-pointer hover:bg-gray-50",
              onClick: () => {
                if (status.key === "cases") {
                  navigate({
                    to: `/${item.path}`
                  });
                } else {
                  navigate({
                    to: `/${item.path}&status=${status.key.toUpperCase()}`
                  });
                }
              },
              children: [
                /* @__PURE__ */ jsxs("div", { children: [
                  /* @__PURE__ */ jsx("p", { className: "text-smd font-light text-gray-700", children: status.label }),
                  /* @__PURE__ */ jsxs("p", { className: "font-medium", children: [
                    " ",
                    item[status.key] || 0
                  ] })
                ] }),
                /* @__PURE__ */ jsx("div", { children: getIcon(status.key) })
              ]
            },
            status.key
          )) })
        ]
      },
      index
    )) }),
    isUser() ? /* @__PURE__ */ jsx(OrganizationTable, {}) : /* @__PURE__ */ jsx(OrganizationStatistics, {})
  ] });
};
const LegalDashboard = () => {
  return /* @__PURE__ */ jsx("div", { className: " bg-gray-50 p-0", children: /* @__PURE__ */ jsx("div", { className: "", children: /* @__PURE__ */ jsxs("div", { className: "grid grid-cols-10 gap-2", children: [
    /* @__PURE__ */ jsx(StatisticsSection, {}),
    /* @__PURE__ */ jsx(CalendarHearingsSection, {})
  ] }) }) });
};
const SplitComponent = LegalDashboard;
export {
  SplitComponent as component
};
