import { jsxs, jsx } from 'react/jsx-runtime';
import { useInfiniteQuery, useMutation } from '@tanstack/react-query';
import { useLocation, useSearch } from '@tanstack/react-router';
import { useState, useRef, useEffect } from 'react';
import { toast } from 'sonner';
import { B as Button } from './router-e7zdrxGz.mjs';
import { C as Card } from './card-CfZVGcIr.mjs';
import { T as Textarea } from './textarea-BfKn0GZN.mjs';
import { g as getAllDocsComments, d as docsComments } from './fileUpload-BBm5-XTb.mjs';
import { SendHorizontal, Loader2 } from 'lucide-react';
import dayjs from 'dayjs';
import { A as Avatar, a as AvatarImage } from './avatar-xL-W5RbG.mjs';
import { D as DefaultUserIcon } from './default-user-EV710LEP.mjs';

function FilePdfIcon() {
  return /* @__PURE__ */ jsx(
    "svg",
    {
      width: "130",
      height: "128",
      viewBox: "0 0 65 64",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      children: /* @__PURE__ */ jsx("g", { id: "FilePdf", children: /* @__PURE__ */ jsx(
        "path",
        {
          id: "Vector",
          d: "M11.2503 30H53.2503C53.5155 30 53.7698 29.8946 53.9574 29.7071C54.1449 29.5196 54.2503 29.2652 54.2503 29V22C54.2505 21.7373 54.1989 21.4771 54.0985 21.2343C53.9982 20.9915 53.8509 20.7709 53.6653 20.585L39.6653 6.585C39.4794 6.39933 39.2588 6.2521 39.016 6.15173C38.7732 6.05135 38.513 5.99979 38.2503 6H14.2503C13.1894 6 12.172 6.42143 11.4218 7.17157C10.6717 7.92172 10.2503 8.93913 10.2503 10V29C10.2503 29.2652 10.3556 29.5196 10.5432 29.7071C10.7307 29.8946 10.985 30 11.2503 30ZM38.2503 11L49.2503 22H38.2503V11ZM56.2503 38.1325C56.2055 38.6466 55.9681 39.1247 55.5856 39.4711C55.203 39.8174 54.7037 40.0064 54.1878 40H48.2503V44H52.1828C52.6989 43.993 53.1985 44.1818 53.5812 44.5283C53.9638 44.8747 54.2011 45.3532 54.2453 45.8675C54.2634 46.1411 54.2251 46.4155 54.1328 46.6736C54.0405 46.9318 53.896 47.1682 53.7085 47.3682C53.5209 47.5682 53.2942 47.7274 53.0425 47.8361C52.7908 47.9448 52.5194 48.0006 52.2453 48H48.2503V51.9325C48.2572 52.4486 48.0685 52.9483 47.722 53.3309C47.3755 53.7136 46.8971 53.9508 46.3828 53.995C46.1092 54.0132 45.8348 53.9749 45.5766 53.8825C45.3185 53.7902 45.0821 53.6458 44.8821 53.4582C44.6821 53.2706 44.5228 53.044 44.4141 52.7923C44.3054 52.5405 44.2497 52.2692 44.2503 51.995V38C44.2503 37.4696 44.461 36.9609 44.836 36.5858C45.2111 36.2107 45.7198 36 46.2503 36H54.2503C54.5244 35.9994 54.7958 36.0552 55.0475 36.1639C55.2992 36.2726 55.5259 36.4318 55.7135 36.6318C55.901 36.8318 56.0455 37.0682 56.1378 37.3264C56.2301 37.5845 56.2684 37.8589 56.2503 38.1325ZM16.2503 36H12.2503C11.7198 36 11.2111 36.2107 10.836 36.5858C10.461 36.9609 10.2503 37.4696 10.2503 38V51.9325C10.242 52.4495 10.4302 52.9504 10.7768 53.3341C11.1234 53.7178 11.6026 53.9558 12.1178 54C12.3913 54.0182 12.6657 53.9799 12.9239 53.8875C13.182 53.7952 13.4184 53.6508 13.6184 53.4632C13.8184 53.2756 13.9777 53.049 14.0864 52.7973C14.1951 52.5455 14.2509 52.2742 14.2503 52V50H16.1003C19.9103 50 23.1353 47.02 23.2478 43.2125C23.2762 42.2757 23.1163 41.3428 22.7774 40.469C22.4385 39.5952 21.9276 38.7984 21.275 38.1257C20.6224 37.4531 19.8414 36.9183 18.9783 36.5532C18.1151 36.188 17.1875 35.9999 16.2503 36ZM16.1628 46H14.2503V40H16.2503C16.6699 39.998 17.0852 40.0841 17.4695 40.2527C17.8537 40.4212 18.1984 40.6685 18.4811 40.9786C18.7638 41.2887 18.9783 41.6546 19.1108 42.0527C19.2433 42.4509 19.2908 42.8724 19.2503 43.29C19.163 44.044 18.7988 44.7388 18.2283 45.2395C17.6578 45.7402 16.9217 46.0112 16.1628 46ZM32.2503 36H28.2503C27.7198 36 27.2111 36.2107 26.836 36.5858C26.461 36.9609 26.2503 37.4696 26.2503 38V52C26.2503 52.5304 26.461 53.0391 26.836 53.4142C27.2111 53.7893 27.7198 54 28.2503 54H32.0803C36.9953 54 41.1328 50.13 41.2478 45.2175C41.2768 44.0176 41.0655 42.8241 40.6264 41.7071C40.1872 40.5901 39.5291 39.5722 38.6907 38.7134C37.8524 37.8545 36.8507 37.172 35.7446 36.706C34.6386 36.24 33.4505 36 32.2503 36ZM32.1278 50H30.2503V40H32.2503C32.9234 39.9995 33.5897 40.1349 34.2092 40.3981C34.8287 40.6614 35.3887 41.047 35.8556 41.5319C36.3225 42.0167 36.6867 42.5909 36.9264 43.2199C37.166 43.8489 37.2762 44.5199 37.2503 45.1925C37.1453 47.8975 34.8353 50 32.1278 50Z",
          fill: "#808080"
        }
      ) })
    }
  );
}
function Docsicon() {
  return /* @__PURE__ */ jsx(
    "svg",
    {
      xmlns: "http://www.w3.org/2000/svg",
      width: "65",
      height: "64",
      viewBox: "0 0 65 64",
      children: /* @__PURE__ */ jsx(
        "path",
        {
          d: "M11.125 30H53.1425C53.4077 30 53.6621 29.8947 53.8496 29.7071C54.0371 29.5196 54.1425 29.2652 54.1425 29V22C54.1427 21.7373 54.0912 21.4771 53.9908 21.2343C53.8904 20.9915 53.7432 20.7709 53.5575 20.585L39.5575 6.58501C39.371 6.39875 39.1496 6.25117 38.9059 6.15078C38.6622 6.05038 38.4011 5.99915 38.1375 6.00001H14.125C13.0641 6.00001 12.0467 6.42144 11.2966 7.17158C10.5464 7.92173 10.125 8.93915 10.125 10V29C10.125 29.2652 10.2304 29.5196 10.4179 29.7071C10.6054 29.8947 10.8598 30 11.125 30ZM38.125 11L49.125 22H38.125V11ZM13.125 36H9.125C8.59457 36 8.08586 36.2107 7.71079 36.5858C7.33571 36.9609 7.125 37.4696 7.125 38V52C7.125 52.5304 7.33571 53.0392 7.71079 53.4142C8.08586 53.7893 8.59457 54 9.125 54H12.9575C17.875 54 22.0125 50.13 22.125 45.2175C22.154 44.0174 21.9427 42.8237 21.5034 41.7065C21.0641 40.5894 20.4057 39.5714 19.5671 38.7125C18.7285 37.8536 17.7265 37.1711 16.6201 36.7053C15.5138 36.2395 14.3254 35.9997 13.125 36ZM13.0025 50H11.125V40H13.125C13.7981 39.9995 14.4644 40.1349 15.084 40.3982C15.7035 40.6614 16.2635 41.047 16.7304 41.5319C17.1973 42.0167 17.5615 42.5909 17.8011 43.2199C18.0408 43.8489 18.1509 44.5199 18.125 45.1925C18.0225 47.8975 15.7125 50 13.005 50H13.0025ZM55.67 48.93C55.9899 49.332 56.1485 49.8389 56.1148 50.3515C56.081 50.8642 55.8574 51.3459 55.4875 51.7025C54.7939 52.4228 53.9633 52.9971 53.0446 53.3916C52.1258 53.7862 51.1374 53.993 50.1375 54C45.725 54 42.1375 49.9625 42.1375 45C42.1375 40.0375 45.7275 36 50.1375 36C51.1374 36.007 52.1258 36.2139 53.0446 36.6084C53.9633 37.003 54.7939 37.5773 55.4875 38.2975C55.8574 38.6541 56.081 39.1358 56.1148 39.6485C56.1485 40.1612 55.9899 40.668 55.67 41.07C55.4892 41.2848 55.2652 41.4592 55.0126 41.5817C54.7599 41.7042 54.4843 41.7721 54.2037 41.7811C53.9231 41.7901 53.6437 41.7398 53.3838 41.6337C53.1238 41.5275 52.8891 41.3679 52.695 41.165C52.3706 40.8074 51.9768 40.5196 51.5375 40.3193C51.0982 40.119 50.6227 40.0104 50.14 40C47.935 40 46.14 42.25 46.14 45C46.14 47.75 47.935 50 50.14 50C50.623 49.9894 51.0988 49.8806 51.5385 49.6804C51.9782 49.4801 52.3725 49.1925 52.6975 48.835C52.8916 48.6322 53.1263 48.4725 53.3863 48.3663C53.6462 48.2602 53.9256 48.21 54.2062 48.2189C54.4868 48.2279 54.7624 48.2958 55.0151 48.4183C55.2677 48.5409 55.4917 48.7152 55.6725 48.93H55.67ZM32.125 36C27.7125 36 24.125 40.0375 24.125 45C24.125 49.9625 27.7175 54 32.125 54C36.5325 54 40.125 49.9625 40.125 45C40.125 40.0375 36.5475 36 32.125 36ZM32.125 50C29.9175 50 28.125 47.75 28.125 45C28.125 42.25 29.92 40 32.125 40C34.33 40 36.125 42.25 36.125 45C36.125 47.75 34.34 50 32.125 50Z",
          fill: "#808080"
        }
      )
    }
  );
}
function FileFilesIcon() {
  return /* @__PURE__ */ jsx("svg", { xmlns: "http://www.w3.org/2000/svg", width: "65", height: "124", viewBox: "0 0 65 64", fill: "none", children: /* @__PURE__ */ jsx("path", { d: "M54.29 20.585L40.29 6.585C40.1041 6.39933 39.8835 6.2521 39.6407 6.15173C39.3979 6.05135 39.1377 5.99979 38.875 6H14.875C13.8141 6 12.7967 6.42143 12.0466 7.17157C11.2964 7.92172 10.875 8.93913 10.875 10V54C10.875 55.0609 11.2964 56.0783 12.0466 56.8284C12.7967 57.5786 13.8141 58 14.875 58H50.875C51.9359 58 52.9533 57.5786 53.7034 56.8284C54.4536 56.0783 54.875 55.0609 54.875 54V22C54.8752 21.7373 54.8237 21.4771 54.7233 21.2343C54.6229 20.9915 54.4757 20.7709 54.29 20.585ZM40.875 44H24.875C24.3446 44 23.8359 43.7893 23.4608 43.4142C23.0857 43.0391 22.875 42.5304 22.875 42C22.875 41.4696 23.0857 40.9609 23.4608 40.5858C23.8359 40.2107 24.3446 40 24.875 40H40.875C41.4054 40 41.9141 40.2107 42.2892 40.5858C42.6643 40.9609 42.875 41.4696 42.875 42C42.875 42.5304 42.6643 43.0391 42.2892 43.4142C41.9141 43.7893 41.4054 44 40.875 44ZM40.875 36H24.875C24.3446 36 23.8359 35.7893 23.4608 35.4142C23.0857 35.0391 22.875 34.5304 22.875 34C22.875 33.4696 23.0857 32.9609 23.4608 32.5858C23.8359 32.2107 24.3446 32 24.875 32H40.875C41.4054 32 41.9141 32.2107 42.2892 32.5858C42.6643 32.9609 42.875 33.4696 42.875 34C42.875 34.5304 42.6643 35.0391 42.2892 35.4142C41.9141 35.7893 41.4054 36 40.875 36ZM38.875 22V11L49.875 22H38.875Z", fill: "#797979" }) });
}
function FileSpreadsheatIcon() {
  return /* @__PURE__ */ jsx("svg", { xmlns: "http://www.w3.org/2000/svg", width: "45", height: "52", viewBox: "0 0 45 52", fill: "none", children: /* @__PURE__ */ jsx("path", { d: "M44.29 14.585L30.29 0.585001C30.1041 0.399332 29.8835 0.252104 29.6407 0.151728C29.3979 0.0513516 29.1377 -0.000205972 28.875 6.18397e-07H4.875C3.81413 6.18397e-07 2.79672 0.421428 2.04657 1.17157C1.29643 1.92172 0.875 2.93913 0.875 4V48C0.875 49.0609 1.29643 50.0783 2.04657 50.8284C2.79672 51.5786 3.81413 52 4.875 52H40.875C41.9359 52 42.9533 51.5786 43.7034 50.8284C44.4536 50.0783 44.875 49.0609 44.875 48V16C44.8752 15.7373 44.8237 15.4771 44.7233 15.2343C44.6229 14.9915 44.4757 14.7709 44.29 14.585ZM30.875 38H14.875C14.3446 38 13.8359 37.7893 13.4608 37.4142C13.0857 37.0391 12.875 36.5304 12.875 36C12.875 35.4696 13.0857 34.9609 13.4608 34.5858C13.8359 34.2107 14.3446 34 14.875 34H30.875C31.4054 34 31.9141 34.2107 32.2892 34.5858C32.6643 34.9609 32.875 35.4696 32.875 36C32.875 36.5304 32.6643 37.0391 32.2892 37.4142C31.9141 37.7893 31.4054 38 30.875 38ZM30.875 30H14.875C14.3446 30 13.8359 29.7893 13.4608 29.4142C13.0857 29.0391 12.875 28.5304 12.875 28C12.875 27.4696 13.0857 26.9609 13.4608 26.5858C13.8359 26.2107 14.3446 26 14.875 26H30.875C31.4054 26 31.9141 26.2107 32.2892 26.5858C32.6643 26.9609 32.875 27.4696 32.875 28C32.875 28.5304 32.6643 29.0391 32.2892 29.4142C31.9141 29.7893 31.4054 30 30.875 30ZM28.875 16V5L39.875 16H28.875Z", fill: "#797979" }) });
}
function FilesAudioIcon() {
  return /* @__PURE__ */ jsx(
    "svg",
    {
      xmlns: "http://www.w3.org/2000/svg",
      width: "65",
      height: "64",
      viewBox: "0 0 65 64",
      children: /* @__PURE__ */ jsx(
        "path",
        {
          d: "M52.95 14.0849L32.95 8.08493C32.6514 7.9953 32.336 7.97671 32.0289 8.03066C31.7219 8.08461 31.4317 8.20959 31.1815 8.39564C30.9313 8.58169 30.7281 8.82364 30.5881 9.10219C30.4481 9.38074 30.3751 9.68816 30.375 9.99993V37.0649C28.3268 35.2329 25.7118 34.1594 22.9672 34.0238C20.2225 33.8882 17.5145 34.6987 15.2956 36.3199C13.0768 37.9411 11.4816 40.2747 10.7766 42.9307C10.0716 45.5868 10.2996 48.4043 11.4225 50.9124C12.5453 53.4206 14.4949 55.4673 16.9456 56.7107C19.3962 57.954 22.1993 58.3186 24.8865 57.7435C27.5736 57.1683 29.9819 55.6884 31.709 53.5509C33.436 51.4134 34.3771 48.7479 34.375 45.9999V12.6874L51.8 17.9149C52.0534 17.9975 52.3208 18.0285 52.5864 18.0063C52.8521 17.984 53.1105 17.9089 53.3467 17.7853C53.5829 17.6617 53.792 17.4922 53.9617 17.2866C54.1314 17.0811 54.2583 16.8437 54.3349 16.5884C54.4116 16.3331 54.4364 16.0651 54.408 15.8001C54.3796 15.535 54.2985 15.2784 54.1695 15.0451C54.0405 14.8119 53.8661 14.6068 53.6567 14.4419C53.4473 14.277 53.207 14.1556 52.95 14.0849Z",
          fill: "#808080"
        }
      )
    }
  );
}
function CommentItem({
  comment,
  commentReplies,
  setReplyTo
}) {
  var _a, _b, _c, _d, _e, _f, _g, _h, _i, _j;
  const [showReplies, setShowReplies] = useState(false);
  const replies = commentReplies.get(comment.id) || [];
  return /* @__PURE__ */ jsxs("div", { className: "space-y-2", children: [
    (comment.type === "REJECTED" || comment.type === "APPROVED") && /* @__PURE__ */ jsxs(
      "div",
      {
        className: `flex flex-col p-3 rounded-lg border border-[#dbdbdb] ${comment.type === "APPROVED" ? "bg-green-50" : "bg-red-50"}`,
        children: [
          comment.type ? /* @__PURE__ */ jsx(
            "h3",
            {
              className: `text-sm 3xl:text-base  mb-2 font-medium ${comment.type === "APPROVED" ? "text-green-500" : "text-red-500"}`,
              children: comment.type === "APPROVED" ? "Approval Note" : "Rejection Note"
            }
          ) : "",
          /* @__PURE__ */ jsxs("div", { className: "flex gap-3 items-start mb-2", children: [
            /* @__PURE__ */ jsx(Avatar, { className: "w-7 h-7 flex items-center justify-center", children: ((_a = comment == null ? void 0 : comment.created_by) == null ? void 0 : _a.profile_pic) ? /* @__PURE__ */ jsx(AvatarImage, { src: (_b = comment.created_by) == null ? void 0 : _b.profile_pic }) : /* @__PURE__ */ jsx(DefaultUserIcon, { className: "w-4 h-4" }) }),
            /* @__PURE__ */ jsxs("div", { className: "flex-1 space-y-1", children: [
              /* @__PURE__ */ jsxs("div", { className: "flex items-center justify-start gap-2", children: [
                /* @__PURE__ */ jsxs("div", { className: "font-normal text-primaryblack text-sm 3xl:text-base", children: [
                  (_c = comment.created_by) == null ? void 0 : _c.first_name,
                  " ",
                  (_d = comment.created_by) == null ? void 0 : _d.last_name
                ] }),
                /* @__PURE__ */ jsx("div", { className: "text-[10px] 3xl:text-xs font-normal text-[#828282]", children: dayjs(comment.created_at).format("hh:mm A") })
              ] }),
              /* @__PURE__ */ jsx("div", { className: "text-xs 3xl:text-sm text-[#444] leading-relaxed", children: /* @__PURE__ */ jsx("ul", { className: "text-black text-opacity-60 space-y-1", children: (_e = comment.comment) == null ? void 0 : _e.split("\n").map((text, index) => /* @__PURE__ */ jsxs("li", { className: "text-black text-opacity-60", children: [
                text.trim(),
                " "
              ] }, index)) }) }),
              /* @__PURE__ */ jsxs("div", { className: "flex gap-4", children: [
                !(comment.type === "REJECTED" || comment.type === "APPROVED") && /* @__PURE__ */ jsx(
                  Button,
                  {
                    onClick: () => setReplyTo(comment),
                    className: "text-[#2F80ED] text-xs h-fit py-0 3xl:text-sm mt-1 bg-transparent px-0 cursor-pointer",
                    children: "Reply"
                  }
                ),
                replies.length > 0 && /* @__PURE__ */ jsx(
                  Button,
                  {
                    onClick: () => setShowReplies(!showReplies),
                    className: "text-[#2F80ED] text-xs h-fit py-0 3xl:text-sm mt-1 bg-transparent px-0 cursor-pointer",
                    children: showReplies ? `Hide Repl ` : `Show Replies (${replies.length})`
                  }
                )
              ] })
            ] })
          ] }),
          showReplies && replies.length > 0 && /* @__PURE__ */ jsx("div", { className: "ml-10 space-y-2", children: replies.reverse().map((reply) => {
            var _a2, _b2, _c2, _d2;
            return /* @__PURE__ */ jsxs("div", { className: "flex gap-3 items-start", children: [
              /* @__PURE__ */ jsx(Avatar, { className: "w-7 h-7", children: /* @__PURE__ */ jsx(AvatarImage, { src: (_a2 = reply.created_by) == null ? void 0 : _a2.profile_pic }) }),
              /* @__PURE__ */ jsxs("div", { className: "flex-1 space-y-1", children: [
                /* @__PURE__ */ jsxs("div", { className: "flex items-center justify-start gap-2", children: [
                  /* @__PURE__ */ jsxs("div", { className: "font-normal text-primaryblack text-sm 3xl:text-base", children: [
                    (_b2 = reply.created_by) == null ? void 0 : _b2.first_name,
                    " ",
                    (_c2 = reply.created_by) == null ? void 0 : _c2.last_name
                  ] }),
                  /* @__PURE__ */ jsx("div", { className: "text-[10px] 3xl:text-xs font-normal text-[#828282]", children: dayjs(reply.created_at).format("hh:mm A") })
                ] }),
                /* @__PURE__ */ jsx("div", { className: "text-xs 3xl:text-sm text-[#444] leading-relaxed", children: /* @__PURE__ */ jsx("ul", { className: "text-black text-opacity-60 space-y-1", children: (_d2 = reply.comment) == null ? void 0 : _d2.split("\n").map((text, index) => /* @__PURE__ */ jsxs(
                  "li",
                  {
                    className: "text-black text-opacity-60",
                    children: [
                      text.trim(),
                      " "
                    ]
                  },
                  index
                )) }) })
              ] })
            ] }, reply.id);
          }) })
        ]
      }
    ),
    comment.type === null && /* @__PURE__ */ jsxs("div", { className: "  flex flex-col", children: [
      /* @__PURE__ */ jsxs("div", { className: "flex gap-3 items-start mb-2", children: [
        /* @__PURE__ */ jsx(Avatar, { className: "w-7 h-7 flex items-center justify-center", children: ((_f = comment == null ? void 0 : comment.created_by) == null ? void 0 : _f.profile_pic) ? /* @__PURE__ */ jsx(AvatarImage, { src: (_g = comment.created_by) == null ? void 0 : _g.profile_pic }) : /* @__PURE__ */ jsx(DefaultUserIcon, { className: "w-4 h-4" }) }),
        /* @__PURE__ */ jsxs("div", { className: "flex-1 space-y-1", children: [
          /* @__PURE__ */ jsxs("div", { className: "flex items-center justify-start gap-2", children: [
            /* @__PURE__ */ jsxs("div", { className: "font-normal text-primaryblack text-sm 3xl:text-base", children: [
              (_h = comment.created_by) == null ? void 0 : _h.first_name,
              " ",
              (_i = comment.created_by) == null ? void 0 : _i.last_name
            ] }),
            /* @__PURE__ */ jsx("div", { className: "text-[10px] 3xl:text-xs font-normal text-[#828282]", children: dayjs(comment.created_at).format("hh:mm A") })
          ] }),
          /* @__PURE__ */ jsx("div", { className: "text-xs 3xl:text-sm text-[#444] leading-relaxed", children: /* @__PURE__ */ jsx("ul", { className: "text-black text-opacity-60 space-y-1", children: (_j = comment.comment) == null ? void 0 : _j.split("\n").map((text, index) => /* @__PURE__ */ jsxs("li", { className: "text-black text-opacity-60", children: [
            text.trim(),
            " "
          ] }, index)) }) }),
          /* @__PURE__ */ jsxs("div", { className: "flex gap-4", children: [
            /* @__PURE__ */ jsx(
              Button,
              {
                onClick: () => setReplyTo(comment),
                className: "text-[#2F80ED] text-xs h-fit py-0 3xl:text-sm mt-1 bg-transparent px-0 cursor-pointer",
                children: "Reply"
              }
            ),
            replies.length > 0 && /* @__PURE__ */ jsx(
              Button,
              {
                onClick: () => setShowReplies(!showReplies),
                className: "text-[#2F80ED] text-xs h-fit py-0 3xl:text-sm mt-1 bg-transparent px-0 cursor-pointer",
                children: showReplies ? `Hide Replies` : `Show Replies (${replies.length})`
              }
            )
          ] })
        ] })
      ] }),
      showReplies && replies.length > 0 && /* @__PURE__ */ jsx("div", { className: "ml-10 space-y-2", children: replies.reverse().map((reply) => {
        var _a2, _b2, _c2, _d2, _e2;
        return /* @__PURE__ */ jsxs("div", { className: "flex gap-3 items-start", children: [
          /* @__PURE__ */ jsx(Avatar, { className: "w-7 h-7 flex items-center justify-center", children: ((_a2 = comment == null ? void 0 : comment.created_by) == null ? void 0 : _a2.profile_pic) ? /* @__PURE__ */ jsx(AvatarImage, { src: (_b2 = comment.created_by) == null ? void 0 : _b2.profile_pic }) : /* @__PURE__ */ jsx(DefaultUserIcon, { className: "w-4 h-4" }) }),
          /* @__PURE__ */ jsxs("div", { className: "flex-1 space-y-1", children: [
            /* @__PURE__ */ jsxs("div", { className: "flex items-center justify-start gap-2", children: [
              /* @__PURE__ */ jsxs("div", { className: "font-normal text-primaryblack text-sm 3xl:text-base", children: [
                (_c2 = reply.created_by) == null ? void 0 : _c2.first_name,
                " ",
                (_d2 = reply.created_by) == null ? void 0 : _d2.last_name
              ] }),
              /* @__PURE__ */ jsx("div", { className: "text-[10px] 3xl:text-xs font-normal text-[#828282]", children: dayjs(reply.created_at).format("hh:mm A") })
            ] }),
            /* @__PURE__ */ jsx("div", { className: "text-xs 3xl:text-sm text-[#444] leading-relaxed", children: /* @__PURE__ */ jsx("ul", { className: "text-black text-opacity-60 space-y-1", children: (_e2 = reply.comment) == null ? void 0 : _e2.split("\n").map((text, index) => /* @__PURE__ */ jsxs(
              "li",
              {
                className: "text-black text-opacity-60",
                children: [
                  text.trim(),
                  " "
                ]
              },
              index
            )) }) })
          ] })
        ] }, reply.id);
      }) })
    ] })
  ] });
}
function NoComments({ className }) {
  return /* @__PURE__ */ jsxs(
    "svg",
    {
      width: "696",
      height: "753",
      viewBox: "0 0 696 753",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg",
      className,
      children: [
        /* @__PURE__ */ jsx(
          "path",
          {
            d: "M386.251 557.72C527.139 557.72 641.351 443.052 641.351 301.6C641.351 160.148 527.139 45.4795 386.251 45.4795C245.364 45.4795 131.151 160.148 131.151 301.6C131.151 443.052 245.364 557.72 386.251 557.72Z",
            stroke: "url(#paint0_linear_14178_35718)",
            strokeWidth: "2.797"
          }
        ),
        /* @__PURE__ */ jsx(
          "path",
          {
            d: "M350.936 272.965V207.643L327.514 169.494L172.405 163.223L109.425 183.604L105.261 263.035L109.425 333.061L139.094 351.874L148.983 402.564L224.455 357.622L300.448 351.874L350.936 324.7V272.965Z",
            fill: "#D2D2D2"
          }
        ),
        /* @__PURE__ */ jsx(
          "path",
          {
            d: "M671.247 336.656C652.207 346.139 626.938 333.947 626.938 333.947C626.938 333.947 632.553 306.384 651.604 296.914C670.644 287.431 695.906 299.612 695.906 299.612C695.906 299.612 690.287 327.174 671.247 336.656Z",
            fill: "url(#paint1_linear_14178_35718)"
          }
        ),
        /* @__PURE__ */ jsx(
          "path",
          {
            d: "M280.666 452.48C304.336 466.724 338.295 453.557 338.295 453.557C338.295 453.557 333.854 417.303 310.17 403.075C286.5 388.833 252.555 401.983 252.555 401.983C252.555 401.983 256.996 438.238 280.666 452.48Z",
            fill: "url(#paint2_linear_14178_35718)"
          }
        ),
        /* @__PURE__ */ jsx(
          "path",
          {
            d: "M610.362 474.681C603.343 474.681 597.652 480.393 597.652 487.441C597.652 494.49 603.343 500.202 610.362 500.202C617.382 500.202 623.072 494.49 623.072 487.441C623.072 480.393 617.382 474.681 610.362 474.681Z",
            fill: "#D2D2D2"
          }
        ),
        /* @__PURE__ */ jsx(
          "path",
          {
            d: "M212.209 100.514C204.312 100.514 197.91 106.941 197.91 114.87C197.91 122.798 204.312 129.226 212.209 129.226C220.106 129.226 226.508 122.798 226.508 114.87C226.508 106.941 220.106 100.514 212.209 100.514Z",
            fill: "#D2D2D2"
          }
        ),
        /* @__PURE__ */ jsx(
          "path",
          {
            d: "M12.036 235.678C5.45502 235.678 0.120117 230.322 0.120117 223.715C0.120117 217.107 5.45502 211.751 12.036 211.751C18.617 211.751 23.952 217.107 23.952 223.715C23.952 230.322 18.617 235.678 12.036 235.678Z",
            fill: "#D2D2D2"
          }
        ),
        /* @__PURE__ */ jsx(
          "path",
          {
            d: "M566.512 267.148C563.441 267.148 560.951 264.648 560.951 261.565C560.951 258.481 563.441 255.981 566.512 255.981C569.583 255.981 572.073 258.481 572.073 261.565C572.073 264.648 569.583 267.148 566.512 267.148Z",
            fill: "#D2D2D2"
          }
        ),
        /* @__PURE__ */ jsx(
          "path",
          {
            d: "M419.504 478.673C415.556 478.673 412.355 475.459 412.355 471.495C412.355 467.53 415.556 464.317 419.504 464.317C423.453 464.317 426.653 467.53 426.653 471.495C426.653 475.459 423.453 478.673 419.504 478.673Z",
            fill: "#E1E4E5"
          }
        ),
        /* @__PURE__ */ jsx(
          "path",
          {
            d: "M447.665 535.221C441.962 535.221 437.338 530.58 437.338 524.853C437.338 519.127 441.962 514.484 447.665 514.484C453.369 514.484 457.992 519.127 457.992 524.853C457.992 530.58 453.369 535.221 447.665 535.221Z",
            fill: "#E1E4E5"
          }
        ),
        /* @__PURE__ */ jsx(
          "path",
          {
            d: "M515.374 151.742C511.033 151.742 507.514 148.209 507.514 143.85C507.514 139.492 511.033 135.959 515.374 135.959C519.715 135.959 523.234 139.492 523.234 143.85C523.234 148.209 519.715 151.742 515.374 151.742Z",
            fill: "#E1E4E5"
          }
        ),
        /* @__PURE__ */ jsx(
          "path",
          {
            d: "M49.4577 361.67C44.6317 361.67 40.7197 357.742 40.7197 352.897C40.7197 348.052 44.6317 344.124 49.4577 344.124C54.2837 344.124 58.1957 348.052 58.1957 352.897C58.1957 357.742 54.2837 361.67 49.4577 361.67Z",
            fill: "#E1E4E5"
          }
        ),
        /* @__PURE__ */ jsx(
          "path",
          {
            d: "M260.904 77.9018C262.026 82.1047 259.542 86.4247 255.355 87.5508C251.169 88.677 246.866 86.1829 245.745 81.98C244.623 77.7771 247.107 73.4571 251.293 72.331C255.48 71.2048 259.782 73.6989 260.904 77.9018Z",
            fill: "#E1E4E5"
          }
        ),
        /* @__PURE__ */ jsx(
          "path",
          {
            d: "M329.104 111.023C323.339 111.023 318.665 106.33 318.665 100.542C318.665 94.7539 323.339 90.0615 329.104 90.0615C334.869 90.0615 339.543 94.7539 339.543 100.542C339.543 106.33 334.869 111.023 329.104 111.023Z",
            fill: "#E1E4E5"
          }
        ),
        /* @__PURE__ */ jsx(
          "path",
          {
            d: "M205.94 439.592C201.505 439.592 197.91 436.704 197.91 433.142C197.91 429.58 201.505 426.692 205.94 426.692C210.375 426.692 213.97 429.58 213.97 433.142C213.97 436.704 210.375 439.592 205.94 439.592Z",
            fill: "#E1E4E5"
          }
        ),
        /* @__PURE__ */ jsx(
          "path",
          {
            d: "M515.058 70.061C517.392 78.8079 512.222 87.7985 503.51 90.1423C494.798 92.486 485.843 87.2952 483.509 78.5484C481.175 69.8014 486.345 60.8107 495.057 58.4671C503.769 56.1233 512.724 61.3141 515.058 70.061Z",
            fill: "#E1E4E5"
          }
        ),
        /* @__PURE__ */ jsx(
          "path",
          {
            d: "M58.1888 246.835H58.3988C59.6428 264.53 72.7498 264.803 72.7498 264.803C72.7498 264.803 58.2958 265.086 58.2958 285.532C58.2958 265.086 43.8428 264.803 43.8428 264.803C43.8428 264.803 56.9448 264.53 58.1888 246.835ZM667.636 385.841H667.822C668.926 401.857 680.556 402.103 680.556 402.103C680.556 402.103 667.731 402.36 667.731 420.864C667.731 402.36 654.906 402.103 654.906 402.103C654.906 402.103 666.532 401.857 667.636 385.841Z",
            fill: "#E1E4E5"
          }
        ),
        /* @__PURE__ */ jsx(
          "path",
          {
            fillRule: "evenodd",
            clipRule: "evenodd",
            d: "M159.258 339.858V383.103L229.737 341.29L237.103 341.169C266.394 340.687 292.755 337.727 312.466 334.716C324.905 332.815 333.549 324.099 335.426 313.155C338.031 297.973 340.249 278.74 340.249 257.368C340.249 235.997 338.031 216.764 335.426 201.583C333.549 190.639 324.905 181.922 312.466 180.022C290.907 176.728 261.426 173.5 228.87 173.5C196.315 173.5 166.833 176.728 145.275 180.022C132.836 181.922 124.192 190.639 122.314 201.583C119.71 216.764 117.491 235.997 117.491 257.368C117.491 278.74 119.71 297.973 122.314 313.155C123.945 322.659 130.558 330.276 140.2 333.495L159.258 339.858ZM94.8745 196.837C98.9145 173.288 117.557 155.979 141.087 152.384C163.632 148.939 194.56 145.544 228.87 145.544C263.181 145.544 294.109 148.939 316.654 152.384C340.184 155.979 358.827 173.288 362.867 196.837C365.683 213.25 368.094 234.099 368.094 257.368C368.094 280.638 365.683 301.487 362.867 317.9C358.827 341.448 340.184 358.759 316.654 362.354C296.029 365.504 268.388 368.615 237.559 369.122L152.419 419.633C143.138 425.139 131.414 418.422 131.414 407.599V360.023C112.571 353.732 98.3425 338.114 94.8745 317.9C92.0585 301.487 89.6465 280.638 89.6465 257.368C89.6465 234.099 92.0585 213.25 94.8745 196.837Z",
            fill: "#D2D2D2"
          }
        ),
        /* @__PURE__ */ jsx(
          "path",
          {
            fillRule: "evenodd",
            clipRule: "evenodd",
            d: "M159.258 215.744C151.569 215.744 145.336 222.003 145.336 229.723C145.336 237.443 151.569 243.701 159.258 243.701H298.482C306.171 243.701 312.405 237.443 312.405 229.723C312.405 222.003 306.171 215.744 298.482 215.744H159.258ZM159.258 271.657C151.569 271.657 145.336 277.915 145.336 285.635C145.336 293.355 151.569 299.613 159.258 299.613H214.948C222.637 299.613 228.87 293.355 228.87 285.635C228.87 277.915 222.637 271.657 214.948 271.657H159.258Z",
            fill: "white"
          }
        ),
        /* @__PURE__ */ jsx(
          "path",
          {
            d: "M357.318 350.544V285.222L380.741 247.073L535.849 240.803L598.829 261.183L602.993 340.614L598.829 410.64L569.161 429.453L559.271 480.143L483.799 435.201L407.807 429.453L357.318 402.279V350.544Z",
            fill: "#D2D2D2"
          }
        ),
        /* @__PURE__ */ jsx(
          "path",
          {
            fillRule: "evenodd",
            clipRule: "evenodd",
            d: "M548.836 418.206V461.45L478.358 419.637L470.991 419.517C441.7 419.035 415.339 416.074 395.629 413.063C383.189 411.163 374.546 402.446 372.668 391.501C370.063 376.321 367.845 357.087 367.845 335.716C367.845 314.345 370.063 295.111 372.668 279.931C374.546 268.986 383.189 260.27 395.629 258.37C417.187 255.076 446.669 251.848 479.224 251.848C511.779 251.848 541.261 255.076 562.819 258.37C575.259 260.27 583.902 268.986 585.78 279.931C588.384 295.111 590.603 314.345 590.603 335.716C590.603 357.087 588.384 376.321 585.78 391.501C584.149 401.006 577.536 408.624 567.894 411.842L548.836 418.206ZM613.22 275.185C609.18 251.636 590.537 234.326 567.008 230.732C544.463 227.287 513.534 223.892 479.224 223.892C444.913 223.892 413.985 227.287 391.44 230.732C367.911 234.326 349.267 251.636 345.227 275.185C342.412 291.597 340 312.446 340 335.716C340 358.986 342.412 379.835 345.227 396.247C349.267 419.796 367.911 437.106 391.44 440.701C412.065 443.852 439.707 446.962 470.535 447.469L555.676 497.981C564.956 503.487 576.681 496.77 576.681 485.947V438.37C595.524 432.08 609.752 416.462 613.22 396.247C616.036 379.835 618.448 358.986 618.448 335.716C618.448 312.446 616.036 291.597 613.22 275.185Z",
            fill: "#D2D2D2"
          }
        ),
        /* @__PURE__ */ jsx(
          "path",
          {
            fillRule: "evenodd",
            clipRule: "evenodd",
            d: "M409.612 294.093C401.923 294.093 395.69 300.352 395.69 308.071C395.69 315.791 401.923 322.049 409.612 322.049H548.836C556.525 322.049 562.758 315.791 562.758 308.071C562.758 300.352 556.525 294.093 548.836 294.093H409.612ZM409.612 350.006C401.923 350.006 395.69 356.263 395.69 363.983C395.69 371.703 401.923 377.962 409.612 377.962H465.302C472.991 377.962 479.224 371.703 479.224 363.983C479.224 356.263 472.991 350.006 465.302 350.006H409.612Z",
            fill: "white"
          }
        ),
        /* @__PURE__ */ jsx(
          "path",
          {
            d: "M407.498 89.9387C409.292 88.8989 411.326 88.3516 413.397 88.3516C415.469 88.3516 417.503 88.8989 419.297 89.9387L455.896 111.153C457.69 112.193 459.179 113.689 460.215 115.489C461.25 117.29 461.795 119.333 461.795 121.412V163.842C461.795 168.074 459.547 171.985 455.896 174.101L419.297 195.316C417.503 196.356 415.469 196.903 413.397 196.903C411.326 196.903 409.292 196.356 407.498 195.316L370.899 174.101C369.106 173.061 367.616 171.566 366.581 169.765C365.545 167.964 365 165.922 365 163.842V121.412C365 119.333 365.545 117.29 366.581 115.49C367.616 113.689 369.106 112.193 370.899 111.153L407.498 89.9387Z",
            fill: "#D2D2D2"
          }
        ),
        /* @__PURE__ */ jsx(
          "path",
          {
            d: "M413 145.352L398.053 160.358C397.69 160.723 397.237 160.919 396.721 160.944C396.167 160.971 395.68 160.759 395.281 160.358C394.893 159.969 394.668 159.501 394.668 158.967C394.668 158.433 394.893 157.965 395.281 157.575L410.228 142.567L395.281 127.561C394.918 127.196 394.723 126.741 394.698 126.223C394.671 125.667 394.882 125.178 395.281 124.778C395.669 124.388 396.135 124.162 396.667 124.162C397.199 124.162 397.665 124.388 398.053 124.778L413 139.784L427.948 124.778C428.311 124.413 428.765 124.217 429.283 124.192L413 145.352ZM413 145.352L427.948 160.358C428.336 160.748 428.802 160.974 429.334 160.974C429.866 160.974 430.332 160.748 430.72 160.358C431.118 159.959 431.33 159.471 431.303 158.916C431.278 158.395 431.083 157.94 430.72 157.575L415.773 142.567L430.72 127.561C431.108 127.171 431.333 126.703 431.333 126.169C431.333 125.635 431.108 125.167 430.72 124.778C430.322 124.378 429.836 124.165 429.283 124.192L413 145.352Z",
            fill: "white"
          }
        ),
        /* @__PURE__ */ jsx(
          "path",
          {
            d: "M413 145.352L398.053 160.358C397.69 160.723 397.237 160.919 396.721 160.944C396.167 160.971 395.68 160.759 395.281 160.358C394.893 159.969 394.668 159.501 394.668 158.967C394.668 158.433 394.893 157.965 395.281 157.575L410.228 142.567L395.281 127.561C394.918 127.196 394.723 126.741 394.698 126.223C394.671 125.667 394.882 125.178 395.281 124.778C395.669 124.388 396.135 124.162 396.667 124.162C397.199 124.162 397.665 124.388 398.053 124.778L413 139.784L427.948 124.778C428.311 124.413 428.765 124.217 429.283 124.192M413 145.352L429.283 124.192M413 145.352L427.948 160.358C428.336 160.748 428.802 160.974 429.334 160.974C429.866 160.974 430.332 160.748 430.72 160.358C431.118 159.959 431.33 159.471 431.303 158.916C431.278 158.395 431.083 157.94 430.72 157.575L415.773 142.567L430.72 127.561C431.108 127.171 431.333 126.703 431.333 126.169C431.333 125.635 431.108 125.167 430.72 124.778C430.322 124.378 429.836 124.165 429.283 124.192",
            stroke: "white"
          }
        ),
        /* @__PURE__ */ jsx(
          "path",
          {
            d: "M203 655.481V624.418H206.713L223.199 649.357V624.418H226.912V655.481H223.199L206.713 630.542V655.481H203ZM243.456 656.014C241.304 656.014 239.403 655.512 237.754 654.505C236.105 653.498 234.823 652.078 233.909 650.245C232.994 648.412 232.539 646.265 232.539 643.81C232.539 641.325 232.994 639.181 233.909 637.376C234.851 635.543 236.149 634.123 237.798 633.116C239.478 632.109 241.392 631.607 243.544 631.607C245.724 631.607 247.624 632.109 249.246 633.116C250.895 634.123 252.177 635.543 253.091 637.376C254.005 639.181 254.461 641.325 254.461 643.81C254.461 646.265 253.989 648.412 253.047 650.245C252.132 652.078 250.851 653.498 249.201 654.505C247.552 655.512 245.635 656.014 243.456 656.014ZM243.456 652.819C244.812 652.819 246.033 652.494 247.124 651.842C248.215 651.163 249.069 650.156 249.688 648.825C250.337 647.463 250.66 645.793 250.66 643.81C250.66 641.8 250.351 640.127 249.732 638.796C249.113 637.465 248.26 636.475 247.168 635.823C246.108 635.143 244.9 634.802 243.544 634.802C242.218 634.802 241.011 635.143 239.92 635.823C238.829 636.475 237.961 637.465 237.312 638.796C236.663 640.127 236.34 641.8 236.34 643.81C236.34 645.793 236.649 647.463 237.268 648.825C237.917 650.156 238.771 651.163 239.831 651.842C240.923 652.494 242.13 652.819 243.456 652.819ZM285.013 656.014C282.096 656.014 279.561 655.348 277.411 654.017C275.29 652.655 273.638 650.777 272.461 648.381C271.312 645.954 270.737 643.145 270.737 639.95C270.737 636.755 271.312 633.959 272.461 631.563C273.638 629.136 275.29 627.258 277.411 625.927C279.561 624.565 282.096 623.886 285.013 623.886C288.519 623.886 291.362 624.729 293.544 626.415C295.723 628.102 297.124 630.484 297.743 633.56H293.721C293.218 631.638 292.246 630.098 290.804 628.945C289.389 627.76 287.458 627.17 285.013 627.17C282.892 627.17 281.036 627.688 279.444 628.723C277.881 629.729 276.674 631.194 275.82 633.116C274.964 635.01 274.538 637.287 274.538 639.95C274.538 642.612 274.964 644.906 275.82 646.828C276.674 648.722 277.881 650.187 279.444 651.221C281.036 652.228 282.892 652.73 285.013 652.73C287.458 652.73 289.389 652.167 290.804 651.044C292.246 649.89 293.218 648.367 293.721 646.473H297.743C297.124 649.46 295.723 651.798 293.544 653.484C291.362 655.171 288.519 656.014 285.013 656.014ZM313.036 656.014C310.884 656.014 308.983 655.512 307.334 654.505C305.682 653.498 304.4 652.078 303.489 650.245C302.574 648.412 302.118 646.265 302.118 643.81C302.118 641.325 302.574 639.181 303.489 637.376C304.431 635.543 305.726 634.123 307.378 633.116C309.058 632.109 310.972 631.607 313.124 631.607C315.303 631.607 317.204 632.109 318.826 633.116C320.475 634.123 321.756 635.543 322.671 637.376C323.582 639.181 324.041 641.325 324.041 643.81C324.041 646.265 323.569 648.412 322.624 650.245C321.712 652.078 320.43 653.498 318.781 654.505C317.129 655.512 315.215 656.014 313.036 656.014ZM313.036 652.819C314.389 652.819 315.613 652.494 316.704 651.842C317.792 651.163 318.649 650.156 319.268 648.825C319.914 647.463 320.24 645.793 320.24 643.81C320.24 641.8 319.931 640.127 319.312 638.796C318.693 637.465 317.837 636.475 316.748 635.823C315.687 635.143 314.477 634.802 313.124 634.802C311.798 634.802 310.588 635.143 309.5 635.823C308.408 636.475 307.538 637.465 306.892 638.796C306.243 640.127 305.92 641.8 305.92 643.81C305.92 645.793 306.229 647.463 306.848 648.825C307.494 650.156 308.35 651.163 309.411 651.842C310.5 652.494 311.71 652.819 313.036 652.819ZM329.417 655.481V632.14H332.776L332.953 635.335C333.66 634.181 334.618 633.28 335.825 632.628C337.035 631.948 338.301 631.607 339.627 631.607C340.748 631.607 341.748 631.771 342.632 632.095C343.546 632.392 344.342 632.864 345.019 633.515C345.698 634.137 346.243 634.921 346.654 635.867C347.422 634.478 348.453 633.427 349.748 632.717C351.074 631.976 352.461 631.607 353.903 631.607C355.613 631.607 357.071 631.948 358.278 632.628C359.516 633.28 360.461 634.284 361.107 635.645C361.787 636.977 362.124 638.649 362.124 640.66V655.481H358.455V641.059C358.455 638.96 357.999 637.39 357.085 636.355C356.173 635.321 354.936 634.802 353.372 634.802C352.312 634.802 351.339 635.082 350.455 635.645C349.602 636.208 348.908 637.035 348.378 638.13C347.878 639.226 347.627 640.557 347.627 642.124V655.481H343.914V641.059C343.914 638.96 343.458 637.39 342.544 636.355C341.632 635.321 340.408 634.802 338.875 634.802C337.845 634.802 336.886 635.082 336.002 635.645C335.149 636.208 334.455 637.035 333.925 638.13C333.395 639.226 333.129 640.557 333.129 642.124V655.481H329.417ZM368.265 655.481V632.14H371.624L371.8 635.335C372.508 634.181 373.466 633.28 374.673 632.628C375.881 631.948 377.149 631.607 378.474 631.607C379.593 631.607 380.596 631.771 381.48 632.095C382.394 632.392 383.19 632.864 383.867 633.515C384.543 634.137 385.09 634.921 385.502 635.867C386.267 634.478 387.3 633.427 388.596 632.717C389.922 631.976 391.306 631.607 392.751 631.607C394.461 631.607 395.919 631.948 397.126 632.628C398.364 633.28 399.306 634.284 399.955 635.645C400.632 636.977 400.972 638.649 400.972 640.66V655.481H397.303V641.059C397.303 638.96 396.847 637.39 395.933 636.355C395.019 635.321 393.781 634.802 392.22 634.802C391.16 634.802 390.187 635.082 389.303 635.645C388.45 636.208 387.756 637.035 387.226 638.13C386.726 639.226 386.474 640.557 386.474 642.124V655.481H382.762V641.059C382.762 638.96 382.306 637.39 381.392 636.355C380.477 635.321 379.256 634.802 377.723 634.802C376.693 634.802 375.734 635.082 374.85 635.645C373.997 636.208 373.303 637.035 372.773 638.13C372.242 639.226 371.977 640.557 371.977 642.124V655.481H368.265ZM416.745 656.014C414.684 656.014 412.856 655.512 411.264 654.505C409.673 653.498 408.422 652.078 407.508 650.245C406.624 648.412 406.182 646.265 406.182 643.81C406.182 641.356 406.624 639.209 407.508 637.376C408.422 635.543 409.673 634.123 411.264 633.116C412.886 632.109 414.742 631.607 416.833 631.607C419.074 631.607 420.944 632.109 422.447 633.116C423.949 634.123 425.085 635.468 425.85 637.154C426.618 638.84 426.999 640.69 426.999 642.701C426.999 642.998 426.999 643.292 426.999 643.588C426.999 643.885 426.985 644.24 426.955 644.654H408.966V641.769H423.375C423.317 639.492 422.654 637.762 421.386 636.577C420.148 635.365 418.601 634.758 416.745 634.758C415.507 634.758 414.358 635.068 413.297 635.69C412.267 636.28 411.427 637.168 410.778 638.352C410.132 639.536 409.806 641.015 409.806 642.79V644.032C409.806 645.985 410.132 647.627 410.778 648.958C411.427 650.259 412.267 651.235 413.297 651.887C414.358 652.538 415.507 652.863 416.745 652.863C418.397 652.863 419.693 652.552 420.635 651.931C421.579 651.279 422.27 650.364 422.712 649.18H426.38C426.027 650.481 425.408 651.651 424.524 652.686C423.67 653.72 422.579 654.535 421.253 655.126C419.958 655.717 418.455 656.014 416.745 656.014ZM432.146 655.481V632.14H435.505L435.681 635.823C436.358 634.492 437.331 633.457 438.599 632.717C439.894 631.976 441.383 631.607 443.063 631.607C444.773 631.607 446.259 631.932 447.527 632.583C448.795 633.235 449.781 634.225 450.488 635.557C451.195 636.888 451.549 638.574 451.549 640.615V655.481H447.836V641.015C447.836 638.943 447.32 637.39 446.289 636.355C445.286 635.321 443.933 634.802 442.223 634.802C441.074 634.802 440.013 635.082 439.04 635.645C438.068 636.178 437.286 636.977 436.698 638.042C436.137 639.107 435.858 640.407 435.858 641.947V655.481H432.146ZM466.714 655.481C465.388 655.481 464.239 655.273 463.267 654.86C462.295 654.447 461.543 653.751 461.013 652.774C460.513 651.767 460.261 650.422 460.261 648.736V635.29H456.195V632.14H460.261L460.748 626.326H463.974V632.14H470.56V635.29H463.974V648.736C463.974 650.126 464.253 651.074 464.814 651.576C465.375 652.05 466.361 652.286 467.775 652.286H470.471V655.481H466.714ZM484.051 656.014C481.96 656.014 480.22 655.703 478.836 655.082C477.48 654.43 476.449 653.543 475.742 652.419C475.035 651.266 474.607 649.934 474.46 648.425H478.261C478.38 649.224 478.645 649.965 479.057 650.644C479.499 651.296 480.132 651.828 480.957 652.242C481.783 652.655 482.828 652.863 484.096 652.863C485.098 652.863 485.952 652.716 486.659 652.419C487.366 652.095 487.897 651.651 488.25 651.088C488.634 650.525 488.825 649.876 488.825 649.135C488.825 648.159 488.604 647.405 488.162 646.872C487.75 646.309 487.132 645.896 486.306 645.63C485.51 645.333 484.507 645.111 483.3 644.964C482.004 644.787 480.855 644.534 479.853 644.21C478.85 643.885 477.996 643.455 477.289 642.923C476.612 642.39 476.096 641.725 475.742 640.926C475.388 640.127 475.212 639.182 475.212 638.086C475.212 636.813 475.551 635.69 476.228 634.714C476.905 633.737 477.864 632.983 479.101 632.45C480.369 631.887 481.855 631.607 483.565 631.607C486.071 631.607 488.043 632.184 489.488 633.338C490.96 634.492 491.83 636.133 492.096 638.263H488.427C488.281 637.168 487.778 636.311 486.924 635.69C486.071 635.068 484.935 634.758 483.521 634.758C482.018 634.758 480.883 635.038 480.118 635.601C479.353 636.164 478.969 636.902 478.969 637.82C478.969 638.499 479.132 639.121 479.455 639.684C479.808 640.216 480.397 640.674 481.223 641.059C482.049 641.414 483.154 641.68 484.538 641.858C486.275 642.066 487.75 642.404 488.957 642.879C490.165 643.322 491.079 644.018 491.698 644.964C492.347 645.91 492.656 647.197 492.626 648.825C492.626 650.364 492.259 651.665 491.521 652.73C490.814 653.795 489.811 654.608 488.515 655.171C487.247 655.734 485.761 656.014 484.051 656.014Z",
            fill: "#434343"
          }
        ),
        /* @__PURE__ */ jsxs("defs", { children: [
          /* @__PURE__ */ jsxs(
            "linearGradient",
            {
              id: "paint0_linear_14178_35718",
              x1: "397.189",
              y1: "847.891",
              x2: "381.245",
              y2: "-516.21",
              gradientUnits: "userSpaceOnUse",
              children: [
                /* @__PURE__ */ jsx("stop", { stopColor: "white" }),
                /* @__PURE__ */ jsx("stop", { offset: "1", stopColor: "#EEEEEE" })
              ]
            }
          ),
          /* @__PURE__ */ jsxs(
            "linearGradient",
            {
              id: "paint1_linear_14178_35718",
              x1: "598.131",
              y1: "366.236",
              x2: "755.659",
              y2: "242.128",
              gradientUnits: "userSpaceOnUse",
              children: [
                /* @__PURE__ */ jsx("stop", { stopColor: "white" }),
                /* @__PURE__ */ jsx("stop", { offset: "1", stopColor: "#EEEEEE" })
              ]
            }
          ),
          /* @__PURE__ */ jsxs(
            "linearGradient",
            {
              id: "paint2_linear_14178_35718",
              x1: "372.262",
              y1: "498.329",
              x2: "181.1",
              y2: "321.422",
              gradientUnits: "userSpaceOnUse",
              children: [
                /* @__PURE__ */ jsx("stop", { stopColor: "white" }),
                /* @__PURE__ */ jsx("stop", { offset: "1", stopColor: "#EEEEEE" })
              ]
            }
          )
        ] })
      ]
    }
  );
}
const capitalizeFirstLetter = (text) => {
  return text.charAt(0).toUpperCase() + text.slice(1);
};
const DocsCommentsSection = ({ documentId }) => {
  var _a, _b;
  const [comment, setComment] = useState("");
  const [displayComment, setDisplayComment] = useState("");
  const [replyTo, setReplyTo] = useState(null);
  const commentsContainerRef = useRef(null);
  const location = useLocation();
  const path = location.pathname;
  const search = useSearch({ strict: false });
  const stage = search.stage;
  const subStage = search.sub_stage;
  const {
    isFetching,
    isLoading,
    isError,
    error,
    data: commentsData,
    fetchNextPage,
    hasNextPage,
    refetch
  } = useInfiniteQuery({
    queryKey: ["comments", documentId],
    queryFn: async ({ pageParam = 1 }) => {
      var _a2;
      try {
        const queryParams = {
          page: pageParam,
          pageSize: 10
        };
        const response = await getAllDocsComments(documentId, queryParams);
        if ((response == null ? void 0 : response.status) === 200 || (response == null ? void 0 : response.status) === 201) {
          return (_a2 = response == null ? void 0 : response.data) == null ? void 0 : _a2.data;
        }
        throw new Error("Failed to fetch comments");
      } catch (error2) {
        toast.error("Error fetching comments", {
          action: {
            label: "\u2715",
            onClick: () => toast.dismiss()
          }
        });
        return { records: [], pagination_info: {} };
      }
    },
    initialPageParam: 1,
    getNextPageParam: (lastPage) => {
      var _a2, _b2;
      return (_b2 = (_a2 = lastPage == null ? void 0 : lastPage.pagination_info) == null ? void 0 : _a2.next_page) != null ? _b2 : void 0;
    },
    refetchOnWindowFocus: false
  });
  const { mutate: mutateComments, isPending: addCommentPending } = useMutation({
    mutationKey: ["comment", documentId],
    mutationFn: async (data) => {
      const payload = {
        case_stage: stage,
        case_sub_stage: subStage,
        comment: data.comment,
        reply_to: data == null ? void 0 : data.reply_to
      };
      const response = await docsComments(payload, documentId);
      return response;
    },
    onSuccess: () => {
      refetch();
      setComment("");
      setDisplayComment("");
      setReplyTo(null);
    },
    onError: () => {
      toast.error("Failed to post a comment", {
        action: {
          label: "\u2715",
          onClick: () => toast.dismiss()
        }
      });
    }
  });
  const addComment = (e) => {
    e.preventDefault();
    if (!comment.trim()) {
      toast.error("Comment cannot be empty", {
        action: {
          label: "\u2715",
          onClick: () => toast.dismiss()
        }
      });
      return;
    }
    mutateComments({ comment, reply_to: replyTo == null ? void 0 : replyTo.id });
  };
  const handleReplyClick = (comment2) => {
    var _a2;
    setReplyTo(comment2);
    setDisplayComment(`@${(_a2 = comment2.created_by) == null ? void 0 : _a2.first_name} `);
    setComment("");
  };
  const handleInputChange = (e) => {
    var _a2, _b2;
    const value = e.target.value;
    if (replyTo && value.startsWith(`@${(_a2 = replyTo.created_by) == null ? void 0 : _a2.first_name} `)) {
      const mentionedText = `@${(_b2 = replyTo.created_by) == null ? void 0 : _b2.first_name} `;
      const restOfText = value.slice(mentionedText.length);
      setDisplayComment(mentionedText + capitalizeFirstLetter(restOfText));
      setComment(capitalizeFirstLetter(restOfText.trim()));
    } else {
      setDisplayComment(capitalizeFirstLetter(value));
      setComment(value.trim());
    }
  };
  const commentsList = (_b = (_a = commentsData == null ? void 0 : commentsData.pages) == null ? void 0 : _a.flatMap((page) => {
    var _a2;
    return (_a2 = page == null ? void 0 : page.records) != null ? _a2 : [];
  })) != null ? _b : [];
  const { Comments, CommentReplies } = commentsList.reduce(
    (acc, comment2) => {
      var _a2;
      if (!comment2) return acc;
      if (comment2.reply_to) {
        if (!acc.CommentReplies.has(comment2.reply_to)) {
          acc.CommentReplies.set(comment2.reply_to, []);
        }
        (_a2 = acc.CommentReplies.get(comment2.reply_to)) == null ? void 0 : _a2.push(comment2);
      } else {
        acc.Comments.push(comment2);
      }
      return acc;
    },
    { Comments: [], CommentReplies: /* @__PURE__ */ new Map() }
  );
  useEffect(() => {
    const handleScroll = () => {
      if (commentsContainerRef.current) {
        const { scrollTop, scrollHeight, clientHeight } = commentsContainerRef.current;
        if (scrollHeight - scrollTop <= clientHeight + 50 && hasNextPage && !isFetching) {
          fetchNextPage();
        }
      }
    };
    const commentsContainer = commentsContainerRef.current;
    if (commentsContainer) {
      commentsContainer.addEventListener("scroll", handleScroll);
    }
    return () => {
      if (commentsContainer) {
        commentsContainer.removeEventListener("scroll", handleScroll);
      }
    };
  }, [hasNextPage, isFetching, fetchNextPage]);
  useEffect(() => {
    if (isError && error instanceof Error) {
      toast.error(error.message || "Error fetching comments", {
        action: {
          label: "\u2715",
          onClick: () => toast.dismiss()
        }
      });
    }
  }, [isError, error]);
  useEffect(() => {
    setTimeout(() => {
      if (commentsContainerRef.current) {
        commentsContainerRef.current.scrollTop = commentsContainerRef.current.scrollHeight;
      }
    }, 100);
  }, [commentsList.length]);
  return /* @__PURE__ */ jsxs(Card, { className: "w-full h-full mx-auto relative rounded-none border-gray-200 border-0.5 ", children: [
    /* @__PURE__ */ jsx("div", { className: "flex justify-between items-center mb-4 px-2 pt-4", children: /* @__PURE__ */ jsxs("h6", { className: "text-[#444] text-md 3xl:text-lg font-normal", children: [
      "Comments",
      " ",
      /* @__PURE__ */ jsx("span", { className: "bg-black px-3 rounded-full py-[1px] text-xs 3xl:text-sm text-white", children: Comments.length })
    ] }) }),
    /* @__PURE__ */ jsx("div", { children: isLoading ? /* @__PURE__ */ jsx("div", { className: "flex items-center justify-center h-[calc(100vh-270px)]", children: /* @__PURE__ */ jsx("span", { children: "Loading Comments..." }) }) : /* @__PURE__ */ jsx("div", { className: "h-[calc(100vh-270px)]", children: !(Comments == null ? void 0 : Comments.length) ? /* @__PURE__ */ jsx("div", { className: "flex items-center justify-center h-full", children: /* @__PURE__ */ jsx(NoComments, { className: "size-56" }) }) : /* @__PURE__ */ jsx(
      "div",
      {
        className: "space-y-4 h-full overflow-x-auto px-3",
        ref: commentsContainerRef,
        children: [...Comments].reverse().map((comment2) => /* @__PURE__ */ jsx(
          CommentItem,
          {
            comment: comment2,
            commentReplies: CommentReplies,
            setReplyTo: handleReplyClick
          },
          comment2.id
        ))
      }
    ) }) }),
    !path.includes("files") && /* @__PURE__ */ jsx("div", { className: "absolute bottom-0 w-full", children: /* @__PURE__ */ jsxs("div", { className: " relative flex items-center border rounded-none  border-gray-200 p-2 gap-2 bg-gray-100", children: [
      /* @__PURE__ */ jsx(
        Textarea,
        {
          value: displayComment,
          onChange: handleInputChange,
          onKeyDown: (e) => {
            if (e.key === "Enter" && !e.shiftKey) {
              e.preventDefault();
              if (!addCommentPending) {
                addComment(e);
              }
            }
          },
          placeholder: "Add comment",
          className: "border-none h-10 resize-none px-2 py-1 bg-transparent focus:ring-0 flex-1 outline-none text-xs 3xl:text-sm text-[#444] placeholder:text-[#444] placeholder:text-xs 3xl:placeholder:text-sm"
        }
      ),
      /* @__PURE__ */ jsx(
        Button,
        {
          onClick: addComment,
          variant: "ghost",
          size: "icon",
          className: "text-white shadow-none bg-black h-9 w-9 rounded-none cursor-pointer",
          disabled: addCommentPending,
          children: !addCommentPending ? /* @__PURE__ */ jsx(SendHorizontal, { className: "w-5 h-5" }) : /* @__PURE__ */ jsx(Loader2, { className: "animate-spin" })
        }
      )
    ] }) })
  ] });
};

export { DocsCommentsSection as D, FilePdfIcon as F, FileFilesIcon as a, FileSpreadsheatIcon as b, Docsicon as c, FilesAudioIcon as d };
//# sourceMappingURL=DocsCommentsSection-1v4F6eR1.mjs.map
